<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="589px" preserveAspectRatio="none" style="width:2377px;height:589px;background:#FFFFFF;" version="1.1" viewBox="0 0 2377 589" width="2377px" zoomAndPan="magnify"><defs/><g><!--MD5=[9d44916250b776386006c440668bcfbb]
class Agent--><g id="elem_Agent"><rect codeLine="8" fill="#F1F1F1" height="145.7813" id="Agent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="568" x="607.25" y="7"/><ellipse cx="866.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M869.4688,28.6406 Q868.8906,28.9375 868.25,29.0781 Q867.6094,29.2344 866.9063,29.2344 Q864.4063,29.2344 863.0781,27.5938 Q861.7656,25.9375 861.7656,22.8125 Q861.7656,19.6875 863.0781,18.0313 Q864.4063,16.375 866.9063,16.375 Q867.6094,16.375 868.25,16.5313 Q868.9063,16.6875 869.4688,16.9844 L869.4688,19.7031 Q868.8438,19.125 868.25,18.8594 Q867.6563,18.5781 867.0313,18.5781 Q865.6875,18.5781 865,19.6563 Q864.3125,20.7188 864.3125,22.8125 Q864.3125,24.9063 865,25.9844 Q865.6875,27.0469 867.0313,27.0469 Q867.6563,27.0469 868.25,26.7813 Q868.8438,26.5 869.4688,25.9219 L869.4688,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="887" y="27.8467">Agent</text><line style="stroke:#181818;stroke-width:0.5;" x1="608.25" x2="1174.25" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="615.25" y="49.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="627.25" y="55.9951">mCallback : Callback::SharedPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="615.25" y="65.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="627.25" y="72.292">mServer : const Server&amp;</text><line style="stroke:#181818;stroke-width:0.5;" x1="608.25" x2="1174.25" y1="79.5938" y2="79.5938"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="615.25" y="90.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="627.25" y="96.5889">Agent(const Server&amp; server, Callback::SharedPtr callback)</text><ellipse cx="618.25" cy="109.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="627.25" y="112.8857">~Agent()</text><ellipse cx="618.25" cy="125.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="542" x="627.25" y="129.1826">doTask(Receipt::Mode mode, Task task, std::string&amp; result) : Receipt {query}</text><ellipse cx="618.25" cy="142.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="483" x="627.25" y="145.4795">create(const Server&amp; server, Callback::SharedPtr callback) : SharedPtr</text></g><!--MD5=[687e0e93109a4e3b835e34cee365dc7c]
class Callback--><g id="elem_Callback"><rect codeLine="18" fill="#F1F1F1" height="129.4844" id="Callback" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="7" y="246.5"/><ellipse cx="303.75" cy="262.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M306.7188,268.1406 Q306.1406,268.4375 305.5,268.5781 Q304.8594,268.7344 304.1563,268.7344 Q301.6563,268.7344 300.3281,267.0938 Q299.0156,265.4375 299.0156,262.3125 Q299.0156,259.1875 300.3281,257.5313 Q301.6563,255.875 304.1563,255.875 Q304.8594,255.875 305.5,256.0313 Q306.1563,256.1875 306.7188,256.4844 L306.7188,259.2031 Q306.0938,258.625 305.5,258.3594 Q304.9063,258.0781 304.2813,258.0781 Q302.9375,258.0781 302.25,259.1563 Q301.5625,260.2188 301.5625,262.3125 Q301.5625,264.4063 302.25,265.4844 Q302.9375,266.5469 304.2813,266.5469 Q304.9063,266.5469 305.5,266.2813 Q306.0938,266 306.7188,265.4219 L306.7188,268.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="324.25" y="267.3467">Callback</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="665" y1="278.5" y2="278.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="289.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="633" x="27" y="295.4951">mMessages : std::map&lt;std::chrono::time_point&lt;std::chrono::system_clock&gt;, std::string&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="665" y1="302.7969" y2="302.7969"/><ellipse cx="18" cy="316.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="27" y="319.792">Callback()</text><ellipse cx="18" cy="332.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="27" y="336.0889">~Callback()</text><ellipse cx="18" cy="349.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="27" y="352.3857">operator&lt;&lt;(std::ostream&amp; ostr, const Callback::SharedPtr&amp; cb) : std :: ostream&amp;</text><ellipse cx="18" cy="365.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="27" y="368.6826">notify(const std::string&amp; message) : void</text></g><!--MD5=[34b75dd4d6d4601c280a5b76e9c1a953]
class Receipt--><g id="elem_Receipt"><rect codeLine="27" fill="#F1F1F1" height="145.7813" id="Receipt" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="489" x="1239" y="7"/><ellipse cx="1452.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1455.7188,28.6406 Q1455.1406,28.9375 1454.5,29.0781 Q1453.8594,29.2344 1453.1563,29.2344 Q1450.6563,29.2344 1449.3281,27.5938 Q1448.0156,25.9375 1448.0156,22.8125 Q1448.0156,19.6875 1449.3281,18.0313 Q1450.6563,16.375 1453.1563,16.375 Q1453.8594,16.375 1454.5,16.5313 Q1455.1563,16.6875 1455.7188,16.9844 L1455.7188,19.7031 Q1455.0938,19.125 1454.5,18.8594 Q1453.9063,18.5781 1453.2813,18.5781 Q1451.9375,18.5781 1451.25,19.6563 Q1450.5625,20.7188 1450.5625,22.8125 Q1450.5625,24.9063 1451.25,25.9844 Q1451.9375,27.0469 1453.2813,27.0469 Q1453.9063,27.0469 1454.5,26.7813 Q1455.0938,26.5 1455.7188,25.9219 L1455.7188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="1473.25" y="27.8467">Receipt</text><line style="stroke:#181818;stroke-width:0.5;" x1="1240" x2="1727" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1247" y="49.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="1259" y="55.9951">mMode : Mode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1247" y="65.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="458" x="1259" y="72.292">mEndTime : std::chrono::time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1247" y="82.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="1259" y="88.5889">mStartTime : std::chrono::time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1247" y="98.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1259" y="104.8857">mTaskId : uint32_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="1240" x2="1727" y1="112.1875" y2="112.1875"/><ellipse cx="1250" cy="125.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1259" y="129.1826">Receipt(Mode mode)</text><ellipse cx="1250" cy="142.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1259" y="145.4795">setEndTime() : void</text></g><!--MD5=[c60af77fe5573b84a4aa4bce89659574]
class Server--><g id="elem_Server"><rect codeLine="37" fill="#F1F1F1" height="194.6719" id="Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="327" x="701" y="213.5"/><ellipse cx="838.25" cy="229.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M841.2188,235.1406 Q840.6406,235.4375 840,235.5781 Q839.3594,235.7344 838.6563,235.7344 Q836.1563,235.7344 834.8281,234.0938 Q833.5156,232.4375 833.5156,229.3125 Q833.5156,226.1875 834.8281,224.5313 Q836.1563,222.875 838.6563,222.875 Q839.3594,222.875 840,223.0313 Q840.6563,223.1875 841.2188,223.4844 L841.2188,226.2031 Q840.5938,225.625 840,225.3594 Q839.4063,225.0781 838.7813,225.0781 Q837.4375,225.0781 836.75,226.1563 Q836.0625,227.2188 836.0625,229.3125 Q836.0625,231.4063 836.75,232.4844 Q837.4375,233.5469 838.7813,233.5469 Q839.4063,233.5469 840,233.2813 Q840.5938,233 841.2188,232.4219 L841.2188,235.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="858.75" y="234.3467">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="702" x2="1027" y1="245.5" y2="245.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="709" y="256.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="721" y="262.4951">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="709" y="272.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="721" y="278.792">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="709" y="288.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="721" y="295.0889">mMutex : std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="709" y="305.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="721" y="311.3857">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="702" x2="1027" y1="318.6875" y2="318.6875"/><ellipse cx="712" cy="332.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="721" y="335.6826">Server()</text><ellipse cx="712" cy="348.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="721" y="351.9795">~Server()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="709" y="361.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="721" y="368.2764">run() : void</text><ellipse cx="712" cy="381.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="721" y="384.5732">start() : void</text><ellipse cx="712" cy="397.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="721" y="400.8701">stop() : void</text></g><!--MD5=[00ae484b1eedd765e3ed77cfb9344392]
class Agent::ReturnCode--><g id="elem_Agent::ReturnCode"><rect codeLine="50" fill="#F1F1F1" height="80.5938" id="Agent::ReturnCode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="1063" y="270.5"/><ellipse cx="1078" cy="286.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1082.1094,292.5 L1074.3906,292.5 L1074.3906,280.1094 L1082.1094,280.1094 L1082.1094,282.2656 L1076.8438,282.2656 L1076.8438,284.9375 L1081.6094,284.9375 L1081.6094,287.0938 L1076.8438,287.0938 L1076.8438,290.3438 L1082.1094,290.3438 L1082.1094,292.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1092" y="291.3467">Agent::ReturnCode</text><line style="stroke:#181818;stroke-width:0.5;" x1="1064" x2="1229" y1="302.5" y2="302.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="1069" y="319.4951">FAIL</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="1069" y="335.792">OK</text><line style="stroke:#181818;stroke-width:0.5;" x1="1064" x2="1229" y1="343.0938" y2="343.0938"/></g><!--MD5=[7d8a7ca443f2d277af98c76a68d2559e]
class Agent::Task--><g id="elem_Agent::Task"><rect codeLine="56" fill="#F1F1F1" height="96.8906" id="Agent::Task" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="1265.25" y="262.5"/><ellipse cx="1280.25" cy="278.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1284.3594,284.5 L1276.6406,284.5 L1276.6406,272.1094 L1284.3594,272.1094 L1284.3594,274.2656 L1279.0938,274.2656 L1279.0938,276.9375 L1283.8594,276.9375 L1283.8594,279.0938 L1279.0938,279.0938 L1279.0938,282.3438 L1284.3594,282.3438 L1284.3594,284.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1294.25" y="283.3467">Agent::Task</text><line style="stroke:#181818;stroke-width:0.5;" x1="1266.25" x2="1380.25" y1="294.5" y2="294.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="1271.25" y="311.4951">BlockMe_3s</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1271.25" y="327.792">Pi</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="1271.25" y="344.0889">PingMe_5x</text><line style="stroke:#181818;stroke-width:0.5;" x1="1266.25" x2="1380.25" y1="351.3906" y2="351.3906"/></g><!--MD5=[56d3b85566b7013b7a0d77cf3a9da218]
class Receipt::Mode--><g id="elem_Receipt::Mode"><rect codeLine="63" fill="#F1F1F1" height="80.5938" id="Receipt::Mode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="1416.25" y="270.5"/><ellipse cx="1431.25" cy="286.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1435.3594,292.5 L1427.6406,292.5 L1427.6406,280.1094 L1435.3594,280.1094 L1435.3594,282.2656 L1430.0938,282.2656 L1430.0938,284.9375 L1434.8594,284.9375 L1434.8594,287.0938 L1430.0938,287.0938 L1430.0938,290.3438 L1435.3594,290.3438 L1435.3594,292.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1445.25" y="291.3467">Receipt::Mode</text><line style="stroke:#181818;stroke-width:0.5;" x1="1417.25" x2="1549.25" y1="302.5" y2="302.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1422.25" y="319.4951">Async</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="1422.25" y="335.792">Blocking</text><line style="stroke:#181818;stroke-width:0.5;" x1="1417.25" x2="1549.25" y1="343.0938" y2="343.0938"/></g><!--MD5=[d9a7c2c8011ee60fa59415266aa6c258]
class Server::Status--><g id="elem_Server::Status"><rect codeLine="69" fill="#F1F1F1" height="113.1875" id="Server::Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="799.25" y="469.5"/><ellipse cx="814.25" cy="485.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M818.3594,491.5 L810.6406,491.5 L810.6406,479.1094 L818.3594,479.1094 L818.3594,481.2656 L813.0938,481.2656 L813.0938,483.9375 L817.8594,483.9375 L817.8594,486.0938 L813.0938,486.0938 L813.0938,489.3438 L818.3594,489.3438 L818.3594,491.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="828.25" y="490.3467">Server::Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="800.25" x2="928.25" y1="501.5" y2="501.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="805.25" y="518.4951">Init</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="805.25" y="534.792">Run</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="805.25" y="551.0889">Start</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="805.25" y="567.3857">Stop</text><line style="stroke:#181818;stroke-width:0.5;" x1="800.25" x2="928.25" y1="574.6875" y2="574.6875"/></g><!--MD5=[644b5eb9c16c6c1d603327159cdb92d3]
class scoped_logger--><g id="elem_scoped_logger"><rect codeLine="77" fill="#F1F1F1" height="113.1875" id="scoped_logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="607" x="1763" y="23.5"/><ellipse cx="2010.75" cy="39.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2013.7188,45.1406 Q2013.1406,45.4375 2012.5,45.5781 Q2011.8594,45.7344 2011.1563,45.7344 Q2008.6563,45.7344 2007.3281,44.0938 Q2006.0156,42.4375 2006.0156,39.3125 Q2006.0156,36.1875 2007.3281,34.5313 Q2008.6563,32.875 2011.1563,32.875 Q2011.8594,32.875 2012.5,33.0313 Q2013.1563,33.1875 2013.7188,33.4844 L2013.7188,36.2031 Q2013.0938,35.625 2012.5,35.3594 Q2011.9063,35.0781 2011.2813,35.0781 Q2009.9375,35.0781 2009.25,36.1563 Q2008.5625,37.2188 2008.5625,39.3125 Q2008.5625,41.4063 2009.25,42.4844 Q2009.9375,43.5469 2011.2813,43.5469 Q2011.9063,43.5469 2012.5,43.2813 Q2013.0938,43 2013.7188,42.4219 L2013.7188,45.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="2031.25" y="44.3467">scoped_logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="1764" x2="2369" y1="55.5" y2="55.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1771" y="66.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1783" y="72.4951">_ss : std::stringstream</text><line style="stroke:#181818;stroke-width:0.5;" x1="1764" x2="2369" y1="79.7969" y2="79.7969"/><ellipse cx="1774" cy="93.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="1783" y="96.792">scoped_logger(const std::string&amp; className, const char* funcName, unsigned line)</text><ellipse cx="1774" cy="109.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1783" y="113.0889">~scoped_logger()</text><ellipse cx="1774" cy="126.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1783" y="129.3857">stream() : std::stringstream&amp;</text></g><!--MD5=[32da3ac056e6283a39113d8a5f9348d9]
reverse link Agent to Callback--><g id="link_Agent_Callback"><path codeLine="95" d="M703.996,158.263 C634.567,186.911 556.68,219.048 490.52,246.346 " fill="none" id="Agent-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="716.406,153.143,709.3339,151.734,705.3132,157.7202,712.3853,159.1292,716.406,153.143" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c219f1a9f268aba54ac5331fce831460]
reverse link Agent to Server--><g id="link_Agent_Server"><path codeLine="98" d="M881.18,166.405 C879.371,181.751 877.474,197.842 875.631,213.476 " fill="none" id="Agent-backto-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="882.744,153.143,878.0687,158.6331,881.3382,165.0604,886.0136,159.5703,882.744,153.143" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[28f413ae85ee9fcca93cf4a7fac08e4c]
reverse link Agent to Agent::ReturnCode--><g id="link_Agent_Agent::ReturnCode"><path codeLine="107" d="M988.058,163.281 C1006.843,179.594 1026.27,196.713 1044.25,213 C1064.72,231.539 1086.99,252.611 1105.48,270.368 " fill="none" id="Agent-backto-Agent::ReturnCode" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="982.513" cy="158.4786" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="988.561" x2="976.465" y1="163.7151" y2="153.242"/><line style="stroke:#181818;stroke-width:1.0;" x1="977.2764" x2="987.7496" y1="164.5266" y2="152.4306"/></g><!--MD5=[384cfc22ab2b5b05a558b115b614e498]
reverse link Agent to Agent::Task--><g id="link_Agent_Agent::Task"><path codeLine="110" d="M1152.57,159.225 C1185.57,174.465 1217.72,192.29 1246.25,213 C1264.52,226.263 1280.76,244.964 1293.55,262.411 " fill="none" id="Agent-backto-Agent::Task" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1146.1853" cy="156.3561" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1153.4805" x2="1138.89" y1="159.6393" y2="153.073"/><line style="stroke:#181818;stroke-width:1.0;" x1="1142.9021" x2="1149.4684" y1="163.6514" y2="149.0609"/></g><!--MD5=[337e37ce856fbf4a62df92e975117e08]
reverse link Receipt to Receipt::Mode--><g id="link_Receipt_Receipt::Mode"><path codeLine="113" d="M1483.25,168.427 C1483.25,203.492 1483.25,242.149 1483.25,270.197 " fill="none" id="Receipt-backto-Receipt::Mode" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1483.25" cy="161.143" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1483.25" x2="1483.25" y1="169.143" y2="153.143"/><line style="stroke:#181818;stroke-width:1.0;" x1="1475.25" x2="1491.25" y1="161.143" y2="161.143"/></g><!--MD5=[9ace9c1ccb22c4f34614b3bc72ca349a]
reverse link Server to Server::Status--><g id="link_Server_Server::Status"><path codeLine="116" d="M864.25,423.688 C864.25,439.499 864.25,455.156 864.25,469.263 " fill="none" id="Server-backto-Server::Status" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="864.25" cy="416.529" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="864.25" x2="864.25" y1="424.529" y2="408.529"/><line style="stroke:#181818;stroke-width:1.0;" x1="856.25" x2="872.25" y1="416.529" y2="416.529"/></g><!--MD5=[07b611359138312e5479f2644b4df4e4]
@startuml





/' Objects '/

class Agent {
    -Agent(const Server& server, Callback::SharedPtr callback)
    +~Agent()
    -mCallback : Callback::SharedPtr
    +doTask(Receipt::Mode mode, Task task, std::string& result) : Receipt {query}
    +{static} create(const Server& server, Callback::SharedPtr callback) : SharedPtr
    -mServer : const Server&
}


class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<std::chrono::time_point<std::chrono::system_clock>, std::string>
    +notify(const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    -mMode : Mode
    -mEndTime : std::chrono::time_point<std::chrono::system_clock>
    -mStartTime : std::chrono::time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
}


class Server {
    +Server()
    +~Server()
    -mStatus : Status
    -mConditionVariable : std::condition_variable
    -mMutex : std::mutex
    -mThreadPtr : std::unique_ptr<std::thread>
    -run() : void
    +start() : void
    +stop() : void
}


enum Agent::ReturnCode {
    FAIL
    OK
}


enum Agent::Task {
    BlockMe_3s
    Pi
    PingMe_5x
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Server::Status {
    Init
    Run
    Start
    Stop
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}





/' Inheritance relationships '/




/' Aggregation relationships '/

.Agent *- - .Callback


.Agent *- - .Server






/' Nested objects '/

.Agent +- - .Agent::ReturnCode


.Agent +- - .Agent::Task


.Receipt +- - .Receipt::Mode


.Server +- - .Server::Status




@enduml

@startuml






class Agent {
    -Agent(const Server& server, Callback::SharedPtr callback)
    +~Agent()
    -mCallback : Callback::SharedPtr
    +doTask(Receipt::Mode mode, Task task, std::string& result) : Receipt {query}
    +{static} create(const Server& server, Callback::SharedPtr callback) : SharedPtr
    -mServer : const Server&
}


class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<std::chrono::time_point<std::chrono::system_clock>, std::string>
    +notify(const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    -mMode : Mode
    -mEndTime : std::chrono::time_point<std::chrono::system_clock>
    -mStartTime : std::chrono::time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
}


class Server {
    +Server()
    +~Server()
    -mStatus : Status
    -mConditionVariable : std::condition_variable
    -mMutex : std::mutex
    -mThreadPtr : std::unique_ptr<std::thread>
    -run() : void
    +start() : void
    +stop() : void
}


enum Agent::ReturnCode {
    FAIL
    OK
}


enum Agent::Task {
    BlockMe_3s
    Pi
    PingMe_5x
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Server::Status {
    Init
    Run
    Start
    Stop
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}










.Agent *- - .Callback


.Agent *- - .Server







.Agent +- - .Agent::ReturnCode


.Agent +- - .Agent::Task


.Receipt +- - .Receipt::Mode


.Server +- - .Server::Status




@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(EPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>