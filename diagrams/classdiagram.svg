<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1470px" preserveAspectRatio="none" style="width:1550px;height:1470px;background:#FFFFFF;" version="1.1" viewBox="0 0 1550 1470" width="1550px" zoomAndPan="magnify"><defs/><g><!--MD5=[6669928f3067a619cffd39cae9441b58]
cluster Cmder--><g id="cluster_Cmder"><path d="M8.5,6 L61.5,6 A3.75,3.75 0 0 1 64,8.5 L71,28.2969 L917.5,28.2969 A2.5,2.5 0 0 1 920,30.7969 L920,1262.5 A2.5,2.5 0 0 1 917.5,1265 L8.5,1265 A2.5,2.5 0 0 1 6,1262.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="71" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="10" y="20.9951">Cmder</text></g><!--MD5=[e902e7dcfcb16454252f8a4b8b16b082]
cluster Cmder.Testing--><g id="cluster_Cmder.Testing"><path d="M237.5,50 L297.5,50 A3.75,3.75 0 0 1 300,52.5 L307,72.2969 L893.5,72.2969 A2.5,2.5 0 0 1 896,74.7969 L896,261.5 A2.5,2.5 0 0 1 893.5,264 L237.5,264 A2.5,2.5 0 0 1 235,261.5 L235,52.5 A2.5,2.5 0 0 1 237.5,50 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="235" x2="307" y1="72.2969" y2="72.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="239" y="64.9951">Testing</text></g><!--MD5=[6b27664959a1ba1f602f4c17304ec430]
class Cmder.Agent--><g id="elem_Cmder.Agent"><rect codeLine="71" fill="#F1F1F1" height="357.6406" id="Cmder.Agent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="602" x="22" y="308"/><ellipse cx="298.25" cy="324" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M301.2188,329.6406 Q300.6406,329.9375 300,330.0781 Q299.3594,330.2344 298.6563,330.2344 Q296.1563,330.2344 294.8281,328.5938 Q293.5156,326.9375 293.5156,323.8125 Q293.5156,320.6875 294.8281,319.0313 Q296.1563,317.375 298.6563,317.375 Q299.3594,317.375 300,317.5313 Q300.6563,317.6875 301.2188,317.9844 L301.2188,320.7031 Q300.5938,320.125 300,319.8594 Q299.4063,319.5781 298.7813,319.5781 Q297.4375,319.5781 296.75,320.6563 Q296.0625,321.7188 296.0625,323.8125 Q296.0625,325.9063 296.75,326.9844 Q297.4375,328.0469 298.7813,328.0469 Q299.4063,328.0469 300,327.7813 Q300.5938,327.5 301.2188,326.9219 L301.2188,329.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="318.75" y="328.8467">Agent</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="623" y1="340" y2="340"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="350.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="42" y="356.9951">mCallback : Callback::SharedPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="366.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="42" y="373.292">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="383.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="42" y="389.5889">mServer : const Server&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="399.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="42" y="405.8857">mMutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="415.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="42" y="422.1826">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="432.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="42" y="438.4795">mNotifications : std::queue&lt;std::string&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="448.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="42" y="454.7764">mDebugName : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="464.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="42" y="471.0732">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="623" y1="478.375" y2="478.375"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="489.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="576" x="42" y="495.3701">Agent(const Server&amp; server, Callback::SharedPtr callback, const std::string&amp; name)</text><ellipse cx="33" cy="508.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="42" y="511.667">~Agent()</text><ellipse cx="33" cy="524.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="542" x="42" y="527.9639">doTask(Receipt::Mode mode, Task task, std::string&amp; result) : Receipt {query}</text><ellipse cx="33" cy="540.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="440" x="42" y="544.2607">create(Server&amp; server, Callback::SharedPtr callback) : SharedPtr</text><ellipse cx="33" cy="557.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="42" y="560.5576">getStatus() : Status {query}</text><ellipse cx="33" cy="573.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="42" y="576.8545">getName() : std::string&amp; {query}</text><ellipse cx="33" cy="589.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="487" x="42" y="593.1514">statNotification(const std::string&amp; notificationName) : uint64_t {query}</text><ellipse cx="33" cy="606.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="42" y="609.4482">notify(const std::string&amp; message) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="619.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="42" y="625.7451">run() : void</text><ellipse cx="33" cy="638.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="42" y="642.042">start() : void</text><ellipse cx="33" cy="654.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="42" y="658.3389">stop() : void</text></g><!--MD5=[2526fb78d29621537a2d0a39abc55676]
class Cmder.IControllableThread--><g id="elem_Cmder.IControllableThread"><rect codeLine="93" fill="#F1F1F1" height="96.8906" id="Cmder.IControllableThread" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="22" y="118.5"/><ellipse cx="49.15" cy="134.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M49.2594,129.8438 L48.1031,134.9219 L50.4313,134.9219 L49.2594,129.8438 Z M47.775,127.6094 L50.7594,127.6094 L54.1188,140 L51.6656,140 L50.9,136.9375 L47.6188,136.9375 L46.8688,140 L44.4313,140 L47.775,127.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="135" x="65.85" y="139.3467">IControllableThread</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="215" y1="150.5" y2="150.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="215" y1="158.5" y2="158.5"/><ellipse cx="33" cy="172.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="168" x="42" y="175.4951">getStatus() : int {query}</text><ellipse cx="33" cy="188.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="42" y="191.792">start() : void</text><ellipse cx="33" cy="204.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="42" y="208.0889">stop() : void</text></g><!--MD5=[73d95e8b91e1d2f5479410bbec7d2c0c]
class Cmder.Server--><g id="elem_Cmder.Server"><rect codeLine="99" fill="#F1F1F1" height="276.1563" id="Cmder.Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="513" x="390.75" y="726"/><ellipse cx="621" cy="742" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M623.9688,747.6406 Q623.3906,747.9375 622.75,748.0781 Q622.1094,748.2344 621.4063,748.2344 Q618.9063,748.2344 617.5781,746.5938 Q616.2656,744.9375 616.2656,741.8125 Q616.2656,738.6875 617.5781,737.0313 Q618.9063,735.375 621.4063,735.375 Q622.1094,735.375 622.75,735.5313 Q623.4063,735.6875 623.9688,735.9844 L623.9688,738.7031 Q623.3438,738.125 622.75,737.8594 Q622.1563,737.5781 621.5313,737.5781 Q620.1875,737.5781 619.5,738.6563 Q618.8125,739.7188 618.8125,741.8125 Q618.8125,743.9063 619.5,744.9844 Q620.1875,746.0469 621.5313,746.0469 Q622.1563,746.0469 622.75,745.7813 Q623.3438,745.5 623.9688,744.9219 L623.9688,747.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="641.5" y="746.8467">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="391.75" x2="902.75" y1="758" y2="758"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="768.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="410.75" y="774.9951">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="784.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="410.75" y="791.292">mMutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="801.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="410.75" y="807.5889">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="817.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="410.75" y="823.8857">mNotificationStatistics : std::map&lt;std::string, uint64_t&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="833.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="410.75" y="840.1826">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="850.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="410.75" y="856.4795">mAgents : std::vector&lt;Agent::WeakPtr&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="391.75" x2="902.75" y1="863.7813" y2="863.7813"/><ellipse cx="401.75" cy="877.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="410.75" y="880.7764">Server()</text><ellipse cx="401.75" cy="893.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="410.75" y="897.0732">~Server()</text><ellipse cx="401.75" cy="910.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="410.75" y="913.3701">getStatus() : Cmder::Status {query}</text><ellipse cx="401.75" cy="926.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="487" x="410.75" y="929.667">statNotification(const std::string&amp; notificationName) : uint64_t {query}</text><ellipse cx="401.75" cy="942.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="410.75" y="945.9639">registerAgent(Agent::SharedPtr agent) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="398.75" y="955.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="410.75" y="962.2607">run() : void</text><ellipse cx="401.75" cy="975.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="410.75" y="978.5576">start() : void</text><ellipse cx="401.75" cy="991.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="410.75" y="994.8545">stop() : void</text></g><!--MD5=[a01f43714d2ce6bef65710a08e458115]
class Cmder.Agent::Task--><g id="elem_Cmder.Agent::Task"><rect codeLine="116" fill="#F1F1F1" height="96.8906" id="Cmder.Agent::Task" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="239" y="815.5"/><ellipse cx="254" cy="831.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M258.1094,837.5 L250.3906,837.5 L250.3906,825.1094 L258.1094,825.1094 L258.1094,827.2656 L252.8438,827.2656 L252.8438,829.9375 L257.6094,829.9375 L257.6094,832.0938 L252.8438,832.0938 L252.8438,835.3438 L258.1094,835.3438 L258.1094,837.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="268" y="836.3467">Agent::Task</text><line style="stroke:#181818;stroke-width:0.5;" x1="240" x2="354" y1="847.5" y2="847.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="245" y="864.4951">BlockMe_3s</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="245" y="880.792">Pi</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="245" y="897.0889">PingMe_5x</text><line style="stroke:#181818;stroke-width:0.5;" x1="240" x2="354" y1="904.3906" y2="904.3906"/></g><!--MD5=[f7491cd3ca834088eb93961ee9671336]
class Cmder.Status--><g id="elem_Cmder.Status"><rect codeLine="122" fill="#F1F1F1" height="113.1875" id="Cmder.Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="387" y="1135.5"/><ellipse cx="402" cy="1151.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M406.1094,1157.5 L398.3906,1157.5 L398.3906,1145.1094 L406.1094,1145.1094 L406.1094,1147.2656 L400.8438,1147.2656 L400.8438,1149.9375 L405.6094,1149.9375 L405.6094,1152.0938 L400.8438,1152.0938 L400.8438,1155.3438 L406.1094,1155.3438 L406.1094,1157.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="416" y="1156.3467">Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="388" x2="462" y1="1167.5" y2="1167.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="393" y="1184.4951">Init</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="393" y="1200.792">Run</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="393" y="1217.0889">Start</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="393" y="1233.3857">Stop</text><line style="stroke:#181818;stroke-width:0.5;" x1="388" x2="462" y1="1240.6875" y2="1240.6875"/></g><!--MD5=[b101834b75e1f62a3cf6dd626de36055]
class Cmder.Testing.AgentTest--><g id="elem_Cmder.Testing.AgentTest"><rect codeLine="130" fill="#F1F1F1" height="162.0781" id="Cmder.Testing.AgentTest" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="324" x="556" y="86"/><ellipse cx="677.75" cy="102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M680.7188,107.6406 Q680.1406,107.9375 679.5,108.0781 Q678.8594,108.2344 678.1563,108.2344 Q675.6563,108.2344 674.3281,106.5938 Q673.0156,104.9375 673.0156,101.8125 Q673.0156,98.6875 674.3281,97.0313 Q675.6563,95.375 678.1563,95.375 Q678.8594,95.375 679.5,95.5313 Q680.1563,95.6875 680.7188,95.9844 L680.7188,98.7031 Q680.0938,98.125 679.5,97.8594 Q678.9063,97.5781 678.2813,97.5781 Q676.9375,97.5781 676.25,98.6563 Q675.5625,99.7188 675.5625,101.8125 Q675.5625,103.9063 676.25,104.9844 Q676.9375,106.0469 678.2813,106.0469 Q678.9063,106.0469 679.5,105.7813 Q680.0938,105.5 680.7188,104.9219 L680.7188,107.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="698.25" y="106.8467">AgentTest</text><line style="stroke:#181818;stroke-width:0.5;" x1="557" x2="879" y1="118" y2="118"/><polygon fill="none" points="567,126.6484,571,130.6484,567,134.6484,563,130.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="263" x="576" y="134.9951">sAsyncAgent : static Agent::SharedPtr</text><polygon fill="none" points="567,142.9453,571,146.9453,567,150.9453,563,146.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="298" x="576" y="151.292">sNoCallbackAgent : static Agent::SharedPtr</text><polygon fill="none" points="567,159.2422,571,163.2422,567,167.2422,563,163.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="254" x="576" y="167.5889">sCallback : static Callback::SharedPtr</text><polygon fill="none" points="567,175.5391,571,179.5391,567,183.5391,563,179.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="576" y="183.8857">sServer : static Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="557" x2="879" y1="191.1875" y2="191.1875"/><polygon fill="#FFFF44" points="567,199.8359,571,203.8359,567,207.8359,563,203.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="576" y="208.1826">SetUp() : void</text><polygon fill="#FFFF44" points="567,216.1328,571,220.1328,567,224.1328,563,220.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="576" y="224.4795">SetUpTestSuite() : void</text><polygon fill="#FFFF44" points="567,232.4297,571,236.4297,567,240.4297,563,236.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="576" y="240.7764">TearDownTestSuite() : void</text></g><!--MD5=[e47e86a929398a8db33a862faee5d82a]
class Cmder.Testing.ServerTest--><g id="elem_Cmder.Testing.ServerTest"><rect codeLine="140" fill="#F1F1F1" height="129.4844" id="Cmder.Testing.ServerTest" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="270" x="251" y="102.5"/><ellipse cx="344.25" cy="118.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M347.2188,124.1406 Q346.6406,124.4375 346,124.5781 Q345.3594,124.7344 344.6563,124.7344 Q342.1563,124.7344 340.8281,123.0938 Q339.5156,121.4375 339.5156,118.3125 Q339.5156,115.1875 340.8281,113.5313 Q342.1563,111.875 344.6563,111.875 Q345.3594,111.875 346,112.0313 Q346.6563,112.1875 347.2188,112.4844 L347.2188,115.2031 Q346.5938,114.625 346,114.3594 Q345.4063,114.0781 344.7813,114.0781 Q343.4375,114.0781 342.75,115.1563 Q342.0625,116.2188 342.0625,118.3125 Q342.0625,120.4063 342.75,121.4844 Q343.4375,122.5469 344.7813,122.5469 Q345.4063,122.5469 346,122.2813 Q346.5938,122 347.2188,121.4219 L347.2188,124.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="364.75" y="123.3467">ServerTest</text><line style="stroke:#181818;stroke-width:0.5;" x1="252" x2="520" y1="134.5" y2="134.5"/><polygon fill="none" points="262,143.1484,266,147.1484,262,151.1484,258,147.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="271" y="151.4951">mServer : std::unique_ptr&lt;Server&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="252" x2="520" y1="158.7969" y2="158.7969"/><polygon fill="#FFFF44" points="262,167.4453,266,171.4453,262,175.4453,258,171.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="271" y="175.792">SetUp() : void</text><polygon fill="#FFFF44" points="262,183.7422,266,187.7422,262,191.7422,258,187.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="271" y="192.0889">SetUpTestSuite() : void</text><polygon fill="#FFFF44" points="262,200.0391,266,204.0391,262,208.0391,258,204.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="271" y="208.3857">TearDown() : void</text><polygon fill="#FFFF44" points="262,216.3359,266,220.3359,262,224.3359,258,220.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="271" y="224.6826">TearDownTestSuite() : void</text></g><!--MD5=[687e0e93109a4e3b835e34cee365dc7c]
class Callback--><g id="elem_Callback"><rect codeLine="8" fill="#F1F1F1" height="194.6719" id="Callback" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="592" x="936" y="389.5"/><ellipse cx="1199.25" cy="405.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1202.2188,411.1406 Q1201.6406,411.4375 1201,411.5781 Q1200.3594,411.7344 1199.6563,411.7344 Q1197.1563,411.7344 1195.8281,410.0938 Q1194.5156,408.4375 1194.5156,405.3125 Q1194.5156,402.1875 1195.8281,400.5313 Q1197.1563,398.875 1199.6563,398.875 Q1200.3594,398.875 1201,399.0313 Q1201.6563,399.1875 1202.2188,399.4844 L1202.2188,402.2031 Q1201.5938,401.625 1201,401.3594 Q1200.4063,401.0781 1199.7813,401.0781 Q1198.4375,401.0781 1197.75,402.1563 Q1197.0625,403.2188 1197.0625,405.3125 Q1197.0625,407.4063 1197.75,408.4844 Q1198.4375,409.5469 1199.7813,409.5469 Q1200.4063,409.5469 1201,409.2813 Q1201.5938,409 1202.2188,408.4219 L1202.2188,411.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="1219.75" y="410.3467">Callback</text><line style="stroke:#181818;stroke-width:0.5;" x1="937" x2="1527" y1="421.5" y2="421.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="944" y="432.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="956" y="438.4951">mMessages : std::map&lt;Key_t, Message_t&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="944" y="448.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="956" y="454.792">mMutex : std::mutex</text><line style="stroke:#181818;stroke-width:0.5;" x1="937" x2="1527" y1="462.0938" y2="462.0938"/><ellipse cx="947" cy="475.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="956" y="479.0889">Callback()</text><ellipse cx="947" cy="492.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="956" y="495.3857">~Callback()</text><ellipse cx="947" cy="508.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="956" y="511.6826">operator&lt;&lt;(std::ostream&amp; ostr, const Callback::SharedPtr&amp; cb) : std :: ostream&amp;</text><ellipse cx="947" cy="524.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="956" y="527.9795">getFirst(const Receipt&amp; receipt, Type type) : std::optional&lt;Message_t&gt;</text><ellipse cx="947" cy="540.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="501" x="956" y="544.2764">waitFirst(const Receipt&amp; receipt, Type type) : std::optional&lt;Message_t&gt;</text><ellipse cx="947" cy="557.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="956" y="560.5732">clear() : void</text><ellipse cx="947" cy="573.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="956" y="576.8701">notify(TaskId taskId, Type type, const std::string&amp; message) : void</text></g><!--MD5=[34b75dd4d6d4601c280a5b76e9c1a953]
class Receipt--><g id="elem_Receipt"><rect codeLine="21" fill="#F1F1F1" height="259.8594" id="Receipt" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="398" x="984" y="1062"/><ellipse cx="1152.25" cy="1078" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1155.2188,1083.6406 Q1154.6406,1083.9375 1154,1084.0781 Q1153.3594,1084.2344 1152.6563,1084.2344 Q1150.1563,1084.2344 1148.8281,1082.5938 Q1147.5156,1080.9375 1147.5156,1077.8125 Q1147.5156,1074.6875 1148.8281,1073.0313 Q1150.1563,1071.375 1152.6563,1071.375 Q1153.3594,1071.375 1154,1071.5313 Q1154.6563,1071.6875 1155.2188,1071.9844 L1155.2188,1074.7031 Q1154.5938,1074.125 1154,1073.8594 Q1153.4063,1073.5781 1152.7813,1073.5781 Q1151.4375,1073.5781 1150.75,1074.6563 Q1150.0625,1075.7188 1150.0625,1077.8125 Q1150.0625,1079.9063 1150.75,1080.9844 Q1151.4375,1082.0469 1152.7813,1082.0469 Q1153.4063,1082.0469 1154,1081.7813 Q1154.5938,1081.5 1155.2188,1080.9219 L1155.2188,1083.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="1172.75" y="1082.8467">Receipt</text><line style="stroke:#181818;stroke-width:0.5;" x1="985" x2="1381" y1="1094" y2="1094"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="992" y="1104.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="1004" y="1110.9951">mMode : Mode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="992" y="1120.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1004" y="1127.292">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="992" y="1137.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="1004" y="1143.5889">mEndTime : time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="992" y="1153.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="1004" y="1159.8857">mStartTime : time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="992" y="1169.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1004" y="1176.1826">mTaskId : uint32_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="985" x2="1381" y1="1183.4844" y2="1183.4844"/><ellipse cx="995" cy="1197.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1004" y="1200.4795">Receipt(Mode mode)</text><ellipse cx="995" cy="1213.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="1004" y="1216.7764">getEndTime() : ChronotTime_t&amp; {query}</text><ellipse cx="995" cy="1229.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="1004" y="1233.0732">getStartTime() : ChronotTime_t&amp; {query}</text><ellipse cx="995" cy="1246.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="1004" y="1249.3701">getTaskId() : TaskId {query}</text><ellipse cx="995" cy="1262.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="1004" y="1265.667">getExecutionMode() : int {query}</text><ellipse cx="995" cy="1278.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="1004" y="1281.9639">getStatus() : int {query}</text><ellipse cx="995" cy="1294.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1004" y="1298.2607">setEndTime() : void</text><ellipse cx="995" cy="1311.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1004" y="1314.5576">setStatus(Status status) : void</text></g><!--MD5=[85b7aeefaadb719f4e60472b44e3a0b8]
class Callback::Type--><g id="elem_Callback::Type"><rect codeLine="38" fill="#F1F1F1" height="80.5938" id="Callback::Type" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="1343.75" y="823.5"/><ellipse cx="1358.75" cy="839.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1362.8594,845.5 L1355.1406,845.5 L1355.1406,833.1094 L1362.8594,833.1094 L1362.8594,835.2656 L1357.5938,835.2656 L1357.5938,837.9375 L1362.3594,837.9375 L1362.3594,840.0938 L1357.5938,840.0938 L1357.5938,843.3438 L1362.8594,843.3438 L1362.8594,845.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1372.75" y="844.3467">Callback::Type</text><line style="stroke:#181818;stroke-width:0.5;" x1="1344.75" x2="1475.75" y1="855.5" y2="855.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1349.75" y="872.4951">NOTIFICATION</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1349.75" y="888.792">RESULT</text><line style="stroke:#181818;stroke-width:0.5;" x1="1344.75" x2="1475.75" y1="896.0938" y2="896.0938"/></g><!--MD5=[56d3b85566b7013b7a0d77cf3a9da218]
class Receipt::Mode--><g id="elem_Receipt::Mode"><rect codeLine="44" fill="#F1F1F1" height="80.5938" id="Receipt::Mode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="1030" y="1382.5"/><ellipse cx="1045" cy="1398.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1049.1094,1404.5 L1041.3906,1404.5 L1041.3906,1392.1094 L1049.1094,1392.1094 L1049.1094,1394.2656 L1043.8438,1394.2656 L1043.8438,1396.9375 L1048.6094,1396.9375 L1048.6094,1399.0938 L1043.8438,1399.0938 L1043.8438,1402.3438 L1049.1094,1402.3438 L1049.1094,1404.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1059" y="1403.3467">Receipt::Mode</text><line style="stroke:#181818;stroke-width:0.5;" x1="1031" x2="1163" y1="1414.5" y2="1414.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1036" y="1431.4951">Async</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="1036" y="1447.792">Blocking</text><line style="stroke:#181818;stroke-width:0.5;" x1="1031" x2="1163" y1="1455.0938" y2="1455.0938"/></g><!--MD5=[c34f78efd55114cb950f71aaddf20012]
class Receipt::Status--><g id="elem_Receipt::Status"><rect codeLine="50" fill="#F1F1F1" height="80.5938" id="Receipt::Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="1199.75" y="1382.5"/><ellipse cx="1214.75" cy="1398.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1218.8594,1404.5 L1211.1406,1404.5 L1211.1406,1392.1094 L1218.8594,1392.1094 L1218.8594,1394.2656 L1213.5938,1394.2656 L1213.5938,1396.9375 L1218.3594,1396.9375 L1218.3594,1399.0938 L1213.5938,1399.0938 L1213.5938,1402.3438 L1218.8594,1402.3438 L1218.8594,1404.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1228.75" y="1403.3467">Receipt::Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="1200.75" x2="1337.75" y1="1414.5" y2="1414.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="1205.75" y="1431.4951">FAIL</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="1205.75" y="1447.792">OK</text><line style="stroke:#181818;stroke-width:0.5;" x1="1200.75" x2="1337.75" y1="1455.0938" y2="1455.0938"/></g><!--MD5=[caac18772e54bee9b64ca90683596fb8]
class Callback::Message_t--><g id="elem_Callback::Message_t"><rect codeLine="56" fill="#F1F1F1" height="80.5938" id="Callback::Message_t" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="1057.75" y="823.5"/><ellipse cx="1108" cy="839.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1110.9688,845.1406 Q1110.3906,845.4375 1109.75,845.5781 Q1109.1094,845.7344 1108.4063,845.7344 Q1105.9063,845.7344 1104.5781,844.0938 Q1103.2656,842.4375 1103.2656,839.3125 Q1103.2656,836.1875 1104.5781,834.5313 Q1105.9063,832.875 1108.4063,832.875 Q1109.1094,832.875 1109.75,833.0313 Q1110.4063,833.1875 1110.9688,833.4844 L1110.9688,836.2031 Q1110.3438,835.625 1109.75,835.3594 Q1109.1563,835.0781 1108.5313,835.0781 Q1107.1875,835.0781 1106.5,836.1563 Q1105.8125,837.2188 1105.8125,839.3125 Q1105.8125,841.4063 1106.5,842.4844 Q1107.1875,843.5469 1108.5313,843.5469 Q1109.1563,843.5469 1109.75,843.2813 Q1110.3438,843 1110.9688,842.4219 L1110.9688,845.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="1128.5" y="844.3467">Callback::Message_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="1058.75" x2="1307.75" y1="855.5" y2="855.5"/><ellipse cx="1068.75" cy="869.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="1077.75" y="872.4951">mTime : Receipt::ChronotTime_t</text><ellipse cx="1068.75" cy="885.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1077.75" y="888.792">mResult : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="1058.75" x2="1307.75" y1="896.0938" y2="896.0938"/></g><!--MD5=[644b5eb9c16c6c1d603327159cdb92d3]
class scoped_logger--><g id="elem_scoped_logger"><rect codeLine="62" fill="#F1F1F1" height="113.1875" id="scoped_logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="607" x="936.75" y="110.5"/><ellipse cx="1184.5" cy="126.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1187.4688,132.1406 Q1186.8906,132.4375 1186.25,132.5781 Q1185.6094,132.7344 1184.9063,132.7344 Q1182.4063,132.7344 1181.0781,131.0938 Q1179.7656,129.4375 1179.7656,126.3125 Q1179.7656,123.1875 1181.0781,121.5313 Q1182.4063,119.875 1184.9063,119.875 Q1185.6094,119.875 1186.25,120.0313 Q1186.9063,120.1875 1187.4688,120.4844 L1187.4688,123.2031 Q1186.8438,122.625 1186.25,122.3594 Q1185.6563,122.0781 1185.0313,122.0781 Q1183.6875,122.0781 1183,123.1563 Q1182.3125,124.2188 1182.3125,126.3125 Q1182.3125,128.4063 1183,129.4844 Q1183.6875,130.5469 1185.0313,130.5469 Q1185.6563,130.5469 1186.25,130.2813 Q1186.8438,130 1187.4688,129.4219 L1187.4688,132.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1205" y="131.3467">scoped_logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="937.75" x2="1542.75" y1="142.5" y2="142.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="944.75" y="153.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="956.75" y="159.4951">_ss : std::stringstream</text><line style="stroke:#181818;stroke-width:0.5;" x1="937.75" x2="1542.75" y1="166.7969" y2="166.7969"/><ellipse cx="947.75" cy="180.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="956.75" y="183.792">scoped_logger(const std::string&amp; className, const char* funcName, unsigned line)</text><ellipse cx="947.75" cy="196.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="956.75" y="200.0889">~scoped_logger()</text><ellipse cx="947.75" cy="213.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="956.75" y="216.3857">stream() : std::stringstream&amp;</text></g><!--MD5=[ab38a78e8acf248efd1cc74ac7d17596]
reverse link Cmder.IControllableThread to Cmder.Agent--><g id="link_Cmder.IControllableThread_Cmder.Agent"><path codeLine="156" d="M160.419,232.57 C174.695,254.82 191.454,280.94 208.688,307.81 " fill="none" id="Cmder.IControllableThread-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="154.448,236.22,149.541,215.61,166.232,228.66,154.448,236.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[39a07376048056f82c79dcfba4c09acb]
reverse link Cmder.IControllableThread to Cmder.Server--><g id="link_Cmder.IControllableThread_Cmder.Server"><path codeLine="159" d="M173.342,229.73 C191.263,246.24 212.436,262.2 235,272 C318.081,308.08 579.486,241.52 641,308 C668.731,337.97 662.37,571.56 654.906,725.993 " fill="none" id="Cmder.IControllableThread-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="168.22,234.51,158.785,215.54,177.993,224.49,168.22,234.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fbdf90a246226e85fc52c953f7eefd33]
reverse link Cmder.Agent to Callback--><g id="link_Cmder.Agent_Callback"><path codeLine="167" d="M637.454,487 C736.936,487 836.418,487 935.9,487 " fill="none" id="Cmder.Agent-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="624.373,487,630.373,491,636.373,487,630.373,483,624.373,487" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5f070a83d3a92dfae157d3f8d058d8ab]
reverse link Cmder.Agent to Cmder.Server--><g id="link_Cmder.Agent_Cmder.Server"><path codeLine="170" d="M472.709,676.032 C487.196,692.795 501.814,709.553 516.099,725.769 " fill="none" id="Cmder.Agent-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="464.199,666.165,465.0891,673.321,472.0369,675.2516,471.1468,668.0957,464.199,666.165" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[22c02906b7bf5eef95c36d5fdf2c0b9f]
reverse link Cmder.Server to Cmder.Agent--><g id="link_Cmder.Server_Cmder.Agent"><path codeLine="191" d="M532.956,715.703 C519.134,699.44 504.805,682.754 490.42,666.165 " fill="none" id="Cmder.Server-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="541.492,725.769,540.6623,718.6058,533.7309,716.6166,534.5607,723.7798,541.492,725.769" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[208de34f581ccb6e0c9473f02a0d7dd0]
reverse link Cmder.Agent to Cmder.Status--><g id="link_Cmder.Agent_Cmder.Status"><path codeLine="173" d="M232.236,678.488 C197.798,777.996 176.434,899.957 221,1002 C254.816,1079.428 337.729,1139.317 386.811,1169.464 " fill="none" id="Cmder.Agent-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="236.61,666.158,230.8343,670.4756,232.5984,677.4676,238.374,673.15,236.61,666.158" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[acbca8f51b8f134ee641c3769debd151]
reverse link Cmder.Testing.AgentTest to Cmder.Agent--><g id="link_Cmder.Testing.AgentTest_Cmder.Agent"><path codeLine="176" d="M608.201,256.4 C588.077,272.6 566.428,290.02 544.377,307.78 " fill="none" id="Cmder.Testing.AgentTest-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="618.58,248.04,611.3979,248.6863,609.2321,255.5644,616.4142,254.9182,618.58,248.04" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="599.9538" y="268.2717">2</text></g><!--MD5=[b7ed66f30699f3d749314a60335d18bb]
reverse link Cmder.Testing.AgentTest to Callback--><g id="link_Cmder.Testing.AgentTest_Callback"><path codeLine="179" d="M858.468,254.9 C925.685,296.49 1006.39,346.42 1075.56,389.22 " fill="none" id="Cmder.Testing.AgentTest-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="847.372,248.04,850.3703,254.5982,857.5772,254.353,854.5789,247.7948,847.372,248.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dac00d6dac2d87be23a4764571de12a3]
reverse link Cmder.Testing.AgentTest to Cmder.Server--><g id="link_Cmder.Testing.AgentTest_Cmder.Server"><path codeLine="182" d="M723.127,261.53 C726.928,362.12 728.173,526.425 706,666 C702.891,685.569 698.357,705.913 693.162,725.775 " fill="none" id="Cmder.Testing.AgentTest-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="722.602,248.38,718.8492,254.5377,723.0899,260.3701,726.8426,254.2124,722.602,248.38" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8672172a630260964f6faa239709a3cf]
reverse link Callback::Message_t to Receipt--><g id="link_Callback::Message_t_Receipt"><path codeLine="185" d="M1183,917.752 C1183,956.762 1183,1011.629 1183,1061.972 " fill="none" id="Callback::Message_t-backto-Receipt" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1183,904.648,1179,910.648,1183,916.648,1187,910.648,1183,904.648" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[487fb8a49337b43a59761822cfb8472c]
reverse link Receipt to Cmder.Status--><g id="link_Receipt_Cmder.Status"><path codeLine="188" d="M970.48,1192 C801.361,1192 632.241,1192 463.122,1192 " fill="none" id="Receipt-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="983.698,1192,977.698,1188,971.698,1192,977.698,1196,983.698,1192" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9f9f142becf0c0bde389e9081cee633b]
reverse link Cmder.Server to Cmder.Status--><g id="link_Cmder.Server_Cmder.Status"><path codeLine="194" d="M545.994,1013.325 C516.385,1056.805 485.82,1101.688 462.817,1135.466 " fill="none" id="Cmder.Server-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="553.495,1002.309,546.8117,1005.017,546.7409,1012.2278,553.4242,1009.5198,553.495,1002.309" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[98c558907183f545df7ce44ab7c00f56]
reverse link Cmder.Testing.ServerTest to Cmder.Server--><g id="link_Cmder.Testing.ServerTest_Cmder.Server"><path codeLine="197" d="M479.158,238.8 C497.982,251.04 518.115,262.78 538,272 C592.78,297.4 632.396,259.98 669,308 C717.155,371.17 694.218,582.896 671.748,725.805 " fill="none" id="Cmder.Testing.ServerTest-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="468.238,231.54,471.022,238.192,478.2331,238.1806,475.4491,231.5286,468.238,231.54" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[37feff7b10c342727b1eb71a39190441]
reverse link Cmder.Agent to Cmder.Agent::Task--><g id="link_Cmder.Agent_Cmder.Agent::Task"><path codeLine="206" d="M309.596,681.322 C306.131,731.3 302.704,780.725 300.302,815.377 " fill="none" id="Cmder.Agent-backto-Cmder.Agent::Task" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="310.0939" cy="674.1459" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="309.5407" x2="310.647" y1="682.1267" y2="666.165"/><line style="stroke:#181818;stroke-width:1.0;" x1="302.113" x2="318.0747" y1="673.5927" y2="674.699"/></g><!--MD5=[59543f07a28b41313b01d526ae5b31f0]
reverse link Callback to Callback::Message_t--><g id="link_Callback_Callback::Message_t"><path codeLine="209" d="M1217.38,599.872 C1207.52,675.353 1195.09,770.478 1188.2,823.199 " fill="none" id="Callback-backto-Callback::Message_t" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1218.3429" cy="592.5045" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1217.3058" x2="1219.38" y1="600.437" y2="584.572"/><line style="stroke:#181818;stroke-width:1.0;" x1="1210.4104" x2="1226.2754" y1="591.4674" y2="593.5416"/></g><!--MD5=[b786da24d691ca71eb7a2d6158d415f7]
reverse link Callback to Callback::Type--><g id="link_Callback_Callback::Type"><path codeLine="212" d="M1284.43,598.456 C1320.36,674.16 1365.93,770.147 1391.11,823.199 " fill="none" id="Callback-backto-Callback::Type" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1281.2725" cy="591.7982" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1284.7049" x2="1277.84" y1="599.0244" y2="584.572"/><line style="stroke:#181818;stroke-width:1.0;" x1="1274.0462" x2="1288.4987" y1="595.2307" y2="588.3658"/></g><!--MD5=[337e37ce856fbf4a62df92e975117e08]
reverse link Receipt to Receipt::Mode--><g id="link_Receipt_Receipt::Mode"><path codeLine="215" d="M1129.12,1336.465 C1122.83,1353.212 1116.88,1369.0747 1111.84,1382.4869 " fill="none" id="Receipt-backto-Receipt::Mode" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1131.6572" cy="1329.7122" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1128.8443" x2="1134.47" y1="1337.2014" y2="1322.223"/><line style="stroke:#181818;stroke-width:1.0;" x1="1124.168" x2="1139.1464" y1="1326.8994" y2="1332.525"/></g><!--MD5=[ff8f68cd9860b13c4e769e1081d0a27c]
reverse link Receipt to Receipt::Status--><g id="link_Receipt_Receipt::Status"><path codeLine="218" d="M1236.88,1336.465 C1243.17,1353.212 1249.12,1369.0747 1254.16,1382.4869 " fill="none" id="Receipt-backto-Receipt::Status" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1234.3428" cy="1329.7122" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1237.1557" x2="1231.53" y1="1337.2014" y2="1322.223"/><line style="stroke:#181818;stroke-width:1.0;" x1="1226.8536" x2="1241.832" y1="1332.525" y2="1326.8994"/></g><!--MD5=[a326fc12d82bfdb6cc551f8320085a04]
@startuml





/' Objects '/

class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<Key_t, Message_t>
    -mMutex : std::mutex
    +getFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +waitFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +clear() : void
    +notify(TaskId taskId, Type type, const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    +getEndTime() : ChronotTime_t& {query}
    +getStartTime() : ChronotTime_t& {query}
    -mMode : Mode
    -mStatus : Status
    +getTaskId() : TaskId {query}
    +getExecutionMode() : int {query}
    +getStatus() : int {query}
    -mEndTime : time_point<std::chrono::system_clock>
    -mStartTime : time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
    +setStatus(Status status) : void
}


enum Callback::Type {
    NOTIFICATION
    RESULT
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Receipt::Status {
    FAIL
    OK
}


class Callback::Message_t {
    +mTime : Receipt::ChronotTime_t
    +mResult : std::string
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}


namespace Cmder {
    class Agent {
        -Agent(const Server& server, Callback::SharedPtr callback, const std::string& name)
        +~Agent()
        -mCallback : Callback::SharedPtr
        +doTask(Receipt::Mode mode, Task task, std::string& result) : Receipt {query}
        +{static} create(Server& server, Callback::SharedPtr callback) : SharedPtr
        +getStatus() : Status {query}
        -mStatus : Status
        -mServer : const Server&
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotifications : std::queue<std::string>
        -mDebugName : std::string
        +getName() : std::string& {query}
        -mThreadPtr : std::unique_ptr<std::thread>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        +notify(const std::string& message) : void
        -run() : void
        +start() : void
        +stop() : void
    }

    abstract class IControllableThread {
        +{abstract} getStatus() : int {query}
        +{abstract} start() : void
        +{abstract} stop() : void
    }

    class Server {
        +Server()
        +~Server()
        +getStatus() : Cmder::Status {query}
        -mStatus : Status
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotificationStatistics : std::map<std::string, uint64_t>
        -mThreadPtr : std::unique_ptr<std::thread>
        -mAgents : std::vector<Agent::WeakPtr>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        +registerAgent(Agent::SharedPtr agent) : void
        -run() : void
        +start() : void
        +stop() : void
    }

    enum Agent::Task {
        BlockMe_3s
        Pi
        PingMe_5x
    }

    enum Status {
        Init
        Run
        Start
        Stop
    }

    namespace Testing {
        class AgentTest {
            #{static} sAsyncAgent : static Agent::SharedPtr
            #{static} sNoCallbackAgent : static Agent::SharedPtr
            #{static} sCallback : static Callback::SharedPtr
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }

        class ServerTest {
            #mServer : std::unique_ptr<Server>
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #TearDown() : void
            #{static} TearDownTestSuite() : void
        }
    }
}





/' Inheritance relationships '/

Cmder.IControllableThread <|- - Cmder.Agent


Cmder.IControllableThread <|- - Cmder.Server





/' Aggregation relationships '/

Cmder.Agent *- - .Callback


Cmder.Agent *- - Cmder.Server


Cmder.Agent *- - Cmder.Status


Cmder.Testing.AgentTest "2" *- - Cmder.Agent


Cmder.Testing.AgentTest *- - .Callback


Cmder.Testing.AgentTest *- - Cmder.Server


.Callback::Message_t *- - .Receipt


.Receipt *- - Cmder.Status


Cmder.Server *- - Cmder.Agent


Cmder.Server *- - Cmder.Status


Cmder.Testing.ServerTest *- - Cmder.Server






/' Nested objects '/

Cmder.Agent +- - Cmder.Agent::Task


.Callback +- - .Callback::Message_t


.Callback +- - .Callback::Type


.Receipt +- - .Receipt::Mode


.Receipt +- - .Receipt::Status




@enduml

@startuml






class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<Key_t, Message_t>
    -mMutex : std::mutex
    +getFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +waitFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +clear() : void
    +notify(TaskId taskId, Type type, const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    +getEndTime() : ChronotTime_t& {query}
    +getStartTime() : ChronotTime_t& {query}
    -mMode : Mode
    -mStatus : Status
    +getTaskId() : TaskId {query}
    +getExecutionMode() : int {query}
    +getStatus() : int {query}
    -mEndTime : time_point<std::chrono::system_clock>
    -mStartTime : time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
    +setStatus(Status status) : void
}


enum Callback::Type {
    NOTIFICATION
    RESULT
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Receipt::Status {
    FAIL
    OK
}


class Callback::Message_t {
    +mTime : Receipt::ChronotTime_t
    +mResult : std::string
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}


namespace Cmder {
    class Agent {
        -Agent(const Server& server, Callback::SharedPtr callback, const std::string& name)
        +~Agent()
        -mCallback : Callback::SharedPtr
        +doTask(Receipt::Mode mode, Task task, std::string& result) : Receipt {query}
        +{static} create(Server& server, Callback::SharedPtr callback) : SharedPtr
        +getStatus() : Status {query}
        -mStatus : Status
        -mServer : const Server&
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotifications : std::queue<std::string>
        -mDebugName : std::string
        +getName() : std::string& {query}
        -mThreadPtr : std::unique_ptr<std::thread>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        +notify(const std::string& message) : void
        -run() : void
        +start() : void
        +stop() : void
    }

    abstract class IControllableThread {
        +{abstract} getStatus() : int {query}
        +{abstract} start() : void
        +{abstract} stop() : void
    }

    class Server {
        +Server()
        +~Server()
        +getStatus() : Cmder::Status {query}
        -mStatus : Status
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotificationStatistics : std::map<std::string, uint64_t>
        -mThreadPtr : std::unique_ptr<std::thread>
        -mAgents : std::vector<Agent::WeakPtr>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        +registerAgent(Agent::SharedPtr agent) : void
        -run() : void
        +start() : void
        +stop() : void
    }

    enum Agent::Task {
        BlockMe_3s
        Pi
        PingMe_5x
    }

    enum Status {
        Init
        Run
        Start
        Stop
    }

    namespace Testing {
        class AgentTest {
            #{static} sAsyncAgent : static Agent::SharedPtr
            #{static} sNoCallbackAgent : static Agent::SharedPtr
            #{static} sCallback : static Callback::SharedPtr
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }

        class ServerTest {
            #mServer : std::unique_ptr<Server>
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #TearDown() : void
            #{static} TearDownTestSuite() : void
        }
    }
}






Cmder.IControllableThread <|- - Cmder.Agent


Cmder.IControllableThread <|- - Cmder.Server






Cmder.Agent *- - .Callback


Cmder.Agent *- - Cmder.Server


Cmder.Agent *- - Cmder.Status


Cmder.Testing.AgentTest "2" *- - Cmder.Agent


Cmder.Testing.AgentTest *- - .Callback


Cmder.Testing.AgentTest *- - Cmder.Server


.Callback::Message_t *- - .Receipt


.Receipt *- - Cmder.Status


Cmder.Server *- - Cmder.Agent


Cmder.Server *- - Cmder.Status


Cmder.Testing.ServerTest *- - Cmder.Server







Cmder.Agent +- - Cmder.Agent::Task


.Callback +- - .Callback::Message_t


.Callback +- - .Callback::Type


.Receipt +- - .Receipt::Mode


.Receipt +- - .Receipt::Status




@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(EPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>