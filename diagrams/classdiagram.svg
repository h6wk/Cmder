<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1518px" preserveAspectRatio="none" style="width:2176px;height:1518px;background:#FFFFFF;" version="1.1" viewBox="0 0 2176 1518" width="2176px" zoomAndPan="magnify"><defs/><g><!--MD5=[6669928f3067a619cffd39cae9441b58]
cluster Cmder--><g id="cluster_Cmder"><path d="M8.5,6 L61.5,6 A3.75,3.75 0 0 1 64,8.5 L71,28.2969 L1543.5,28.2969 A2.5,2.5 0 0 1 1546,30.7969 L1546,1310.5 A2.5,2.5 0 0 1 1543.5,1313 L8.5,1313 A2.5,2.5 0 0 1 6,1310.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="71" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="10" y="20.9951">Cmder</text></g><!--MD5=[e902e7dcfcb16454252f8a4b8b16b082]
cluster Cmder.Testing--><g id="cluster_Cmder.Testing"><path d="M766.5,50 L826.5,50 A3.75,3.75 0 0 1 829,52.5 L836,72.2969 L1422.5,72.2969 A2.5,2.5 0 0 1 1425,74.7969 L1425,261.5 A2.5,2.5 0 0 1 1422.5,264 L766.5,264 A2.5,2.5 0 0 1 764,261.5 L764,52.5 A2.5,2.5 0 0 1 766.5,50 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="764" x2="836" y1="72.2969" y2="72.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="768" y="64.9951">Testing</text></g><!--MD5=[6b27664959a1ba1f602f4c17304ec430]
class Cmder.Agent--><g id="elem_Cmder.Agent"><rect codeLine="71" fill="#F1F1F1" height="390.2344" id="Cmder.Agent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="663" x="866.75" y="308"/><ellipse cx="1173.5" cy="324" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1176.4688,329.6406 Q1175.8906,329.9375 1175.25,330.0781 Q1174.6094,330.2344 1173.9063,330.2344 Q1171.4063,330.2344 1170.0781,328.5938 Q1168.7656,326.9375 1168.7656,323.8125 Q1168.7656,320.6875 1170.0781,319.0313 Q1171.4063,317.375 1173.9063,317.375 Q1174.6094,317.375 1175.25,317.5313 Q1175.9063,317.6875 1176.4688,317.9844 L1176.4688,320.7031 Q1175.8438,320.125 1175.25,319.8594 Q1174.6563,319.5781 1174.0313,319.5781 Q1172.6875,319.5781 1172,320.6563 Q1171.3125,321.7188 1171.3125,323.8125 Q1171.3125,325.9063 1172,326.9844 Q1172.6875,328.0469 1174.0313,328.0469 Q1174.6563,328.0469 1175.25,327.7813 Q1175.8438,327.5 1176.4688,326.9219 L1176.4688,329.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1194" y="328.8467">Agent</text><line style="stroke:#181818;stroke-width:0.5;" x1="867.75" x2="1528.75" y1="340" y2="340"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="350.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="886.75" y="356.9951">mCallback : Callback::SharedPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="366.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="886.75" y="373.292">mServer : Server&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="383.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="886.75" y="389.5889">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="399.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="886.75" y="405.8857">mMutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="415.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="886.75" y="422.1826">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="432.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="886.75" y="438.4795">mNotifications : std::queue&lt;std::string&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="448.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="886.75" y="454.7764">mDebugName : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="464.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="886.75" y="471.0732">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="867.75" x2="1528.75" y1="478.375" y2="478.375"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="489.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="886.75" y="495.3701">Agent(Server&amp; server, Callback::SharedPtr callback)</text><ellipse cx="877.75" cy="508.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="886.75" y="511.667">~Agent()</text><ellipse cx="877.75" cy="524.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="637" x="886.75" y="527.9639">doTask(Receipt::Mode mode, const TaskName&amp; task, std::string&amp; result) : Receipt {query}</text><ellipse cx="877.75" cy="540.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="440" x="886.75" y="544.2607">create(Server&amp; server, Callback::SharedPtr callback) : SharedPtr</text><ellipse cx="877.75" cy="557.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="886.75" y="560.5576">getStatus() : Status {query}</text><ellipse cx="877.75" cy="573.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="886.75" y="576.8545">getName() : std::string&amp; {query}</text><ellipse cx="877.75" cy="589.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="487" x="886.75" y="593.1514">statNotification(const std::string&amp; notificationName) : uint64_t {query}</text><ellipse cx="877.75" cy="606.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="886.75" y="609.4482">notify(const std::string&amp; message) : void</text><ellipse cx="877.75" cy="622.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="886.75" y="625.7451">registerAgent() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="874.75" y="635.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="886.75" y="642.042">run() : void</text><ellipse cx="877.75" cy="654.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="886.75" y="658.3389">start() : void</text><ellipse cx="877.75" cy="671.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="886.75" y="674.6357">stop() : void</text><ellipse cx="877.75" cy="687.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="886.75" y="690.9326">unregisterAgent() : void</text></g><!--MD5=[2526fb78d29621537a2d0a39abc55676]
class Cmder.IControllableThread--><g id="elem_Cmder.IControllableThread"><rect codeLine="95" fill="#F1F1F1" height="96.8906" id="Cmder.IControllableThread" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="551" y="118.5"/><ellipse cx="578.15" cy="134.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M578.2594,129.8438 L577.1031,134.9219 L579.4313,134.9219 L578.2594,129.8438 Z M576.775,127.6094 L579.7594,127.6094 L583.1188,140 L580.6656,140 L579.9,136.9375 L576.6188,136.9375 L575.8688,140 L573.4313,140 L576.775,127.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="135" x="594.85" y="139.3467">IControllableThread</text><line style="stroke:#181818;stroke-width:0.5;" x1="552" x2="744" y1="150.5" y2="150.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="552" x2="744" y1="158.5" y2="158.5"/><ellipse cx="562" cy="172.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="168" x="571" y="175.4951">getStatus() : int {query}</text><ellipse cx="562" cy="188.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="571" y="191.792">start() : void</text><ellipse cx="562" cy="204.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="571" y="208.0889">stop() : void</text></g><!--MD5=[8785e483ad40ab6bd1028e5a6995daed]
class Cmder.IStatProvider--><g id="elem_Cmder.IStatProvider"><rect codeLine="101" fill="#F1F1F1" height="64.2969" id="Cmder.IStatProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="511" x="320.75" y="471"/><ellipse cx="528.5" cy="487" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M528.6094,482.3438 L527.4531,487.4219 L529.7813,487.4219 L528.6094,482.3438 Z M527.125,480.1094 L530.1094,480.1094 L533.4688,492.5 L531.0156,492.5 L530.25,489.4375 L526.9688,489.4375 L526.2188,492.5 L523.7813,492.5 L527.125,480.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="549" y="491.8467">IStatProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="321.75" x2="830.75" y1="503" y2="503"/><line style="stroke:#181818;stroke-width:0.5;" x1="321.75" x2="830.75" y1="511" y2="511"/><ellipse cx="331.75" cy="524.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="485" x="340.75" y="527.9951">statNotification(const std::string&amp; notificationName) : uint64_t {query}</text></g><!--MD5=[73d95e8b91e1d2f5479410bbec7d2c0c]
class Cmder.Server--><g id="elem_Cmder.Server"><rect codeLine="105" fill="#F1F1F1" height="292.4531" id="Cmder.Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="513" x="319.75" y="758"/><ellipse cx="550" cy="774" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M552.9688,779.6406 Q552.3906,779.9375 551.75,780.0781 Q551.1094,780.2344 550.4063,780.2344 Q547.9063,780.2344 546.5781,778.5938 Q545.2656,776.9375 545.2656,773.8125 Q545.2656,770.6875 546.5781,769.0313 Q547.9063,767.375 550.4063,767.375 Q551.1094,767.375 551.75,767.5313 Q552.4063,767.6875 552.9688,767.9844 L552.9688,770.7031 Q552.3438,770.125 551.75,769.8594 Q551.1563,769.5781 550.5313,769.5781 Q549.1875,769.5781 548.5,770.6563 Q547.8125,771.7188 547.8125,773.8125 Q547.8125,775.9063 548.5,776.9844 Q549.1875,778.0469 550.5313,778.0469 Q551.1563,778.0469 551.75,777.7813 Q552.3438,777.5 552.9688,776.9219 L552.9688,779.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="570.5" y="778.8467">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="320.75" x2="831.75" y1="790" y2="790"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="800.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="339.75" y="806.9951">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="816.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="339.75" y="823.292">mMutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="833.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="339.75" y="839.5889">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="849.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="339.75" y="855.8857">mNotificationStatistics : std::map&lt;std::string, uint64_t&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="865.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="339.75" y="872.1826">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="882.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="339.75" y="888.4795">mAgents : vector&lt;Agent::WeakPtr&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="320.75" x2="831.75" y1="895.7813" y2="895.7813"/><ellipse cx="330.75" cy="909.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="339.75" y="912.7764">Server()</text><ellipse cx="330.75" cy="925.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="339.75" y="929.0732">~Server()</text><ellipse cx="330.75" cy="942.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="339.75" y="945.3701">getStatus() : Cmder::Status {query}</text><ellipse cx="330.75" cy="958.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="487" x="339.75" y="961.667">statNotification(const std::string&amp; notificationName) : uint64_t {query}</text><ellipse cx="330.75" cy="974.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="339.75" y="977.9639">registerAgent(Agent::SharedPtr agent) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.75" y="987.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="339.75" y="994.2607">run() : void</text><ellipse cx="330.75" cy="1007.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="339.75" y="1010.5576">start() : void</text><ellipse cx="330.75" cy="1023.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="339.75" y="1026.8545">stop() : void</text><ellipse cx="330.75" cy="1039.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="339.75" y="1043.1514">unregister(const std::string agentName) : void</text></g><!--MD5=[e3781612e5a89293b6819c796baf50fe]
class Cmder.Task--><g id="elem_Cmder.Task"><rect codeLine="123" fill="#F1F1F1" height="64.2969" id="Cmder.Task" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="353" x="162.75" y="135"/><ellipse cx="318.5" cy="151" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M321.4688,156.6406 Q320.8906,156.9375 320.25,157.0781 Q319.6094,157.2344 318.9063,157.2344 Q316.4063,157.2344 315.0781,155.5938 Q313.7656,153.9375 313.7656,150.8125 Q313.7656,147.6875 315.0781,146.0313 Q316.4063,144.375 318.9063,144.375 Q319.6094,144.375 320.25,144.5313 Q320.9063,144.6875 321.4688,144.9844 L321.4688,147.7031 Q320.8438,147.125 320.25,146.8594 Q319.6563,146.5781 319.0313,146.5781 Q317.6875,146.5781 317,147.6563 Q316.3125,148.7188 316.3125,150.8125 Q316.3125,152.9063 317,153.9844 Q317.6875,155.0469 319.0313,155.0469 Q319.6563,155.0469 320.25,154.7813 Q320.8438,154.5 321.4688,153.9219 L321.4688,156.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="339" y="155.8467">Task</text><line style="stroke:#181818;stroke-width:0.5;" x1="163.75" x2="514.75" y1="167" y2="167"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="170.75" y="177.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327" x="182.75" y="183.9951">mTaskConfiguration : std::vector&lt;TaskConfig&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="163.75" x2="514.75" y1="191.2969" y2="191.2969"/></g><!--MD5=[f7491cd3ca834088eb93961ee9671336]
class Cmder.Status--><g id="elem_Cmder.Status"><rect codeLine="127" fill="#F1F1F1" height="113.1875" id="Cmder.Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="766" y="1183.5"/><ellipse cx="781" cy="1199.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M785.1094,1205.5 L777.3906,1205.5 L777.3906,1193.1094 L785.1094,1193.1094 L785.1094,1195.2656 L779.8438,1195.2656 L779.8438,1197.9375 L784.6094,1197.9375 L784.6094,1200.0938 L779.8438,1200.0938 L779.8438,1203.3438 L785.1094,1203.3438 L785.1094,1205.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="795" y="1204.3467">Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="767" x2="841" y1="1215.5" y2="1215.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="772" y="1232.4951">Init</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="772" y="1248.792">Run</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="772" y="1265.0889">Start</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="772" y="1281.3857">Stop</text><line style="stroke:#181818;stroke-width:0.5;" x1="767" x2="841" y1="1288.6875" y2="1288.6875"/></g><!--MD5=[dd7cdebdbe08dbfe47618d31a4872e74]
class Cmder.TaskName--><g id="elem_Cmder.TaskName"><rect codeLine="134" fill="#F1F1F1" height="96.8906" id="Cmder.TaskName" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105" x="22.75" y="118.5"/><ellipse cx="37.75" cy="134.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M41.8594,140.5 L34.1406,140.5 L34.1406,128.1094 L41.8594,128.1094 L41.8594,130.2656 L36.5938,130.2656 L36.5938,132.9375 L41.3594,132.9375 L41.3594,135.0938 L36.5938,135.0938 L36.5938,138.3438 L41.8594,138.3438 L41.8594,140.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="51.75" y="139.3467">TaskName</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.75" x2="126.75" y1="150.5" y2="150.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="28.75" y="167.4951">BlockMe_3s</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="28.75" y="183.792">Pi</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="28.75" y="200.0889">PingMe_5x</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.75" x2="126.75" y1="207.3906" y2="207.3906"/></g><!--MD5=[d370d4ed968dcd787970d31c51041376]
class Cmder.Task::TaskConfig--><g id="elem_Cmder.Task::TaskConfig"><rect codeLine="140" fill="#F1F1F1" height="48" id="Cmder.Task::TaskConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="22" y="479"/><ellipse cx="37" cy="495" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M39.9688,500.6406 Q39.3906,500.9375 38.75,501.0781 Q38.1094,501.2344 37.4063,501.2344 Q34.9063,501.2344 33.5781,499.5938 Q32.2656,497.9375 32.2656,494.8125 Q32.2656,491.6875 33.5781,490.0313 Q34.9063,488.375 37.4063,488.375 Q38.1094,488.375 38.75,488.5313 Q39.4063,488.6875 39.9688,488.9844 L39.9688,491.7031 Q39.3438,491.125 38.75,490.8594 Q38.1563,490.5781 37.5313,490.5781 Q36.1875,490.5781 35.5,491.6563 Q34.8125,492.7188 34.8125,494.8125 Q34.8125,496.9063 35.5,497.9844 Q36.1875,499.0469 37.5313,499.0469 Q38.1563,499.0469 38.75,498.7813 Q39.3438,498.5 39.9688,497.9219 L39.9688,500.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="51" y="499.8467">Task::TaskConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="173" y1="511" y2="511"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="173" y1="519" y2="519"/></g><!--MD5=[b101834b75e1f62a3cf6dd626de36055]
class Cmder.Testing.AgentTest--><g id="elem_Cmder.Testing.AgentTest"><rect codeLine="144" fill="#F1F1F1" height="162.0781" id="Cmder.Testing.AgentTest" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="324" x="1085" y="86"/><ellipse cx="1206.75" cy="102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1209.7188,107.6406 Q1209.1406,107.9375 1208.5,108.0781 Q1207.8594,108.2344 1207.1563,108.2344 Q1204.6563,108.2344 1203.3281,106.5938 Q1202.0156,104.9375 1202.0156,101.8125 Q1202.0156,98.6875 1203.3281,97.0313 Q1204.6563,95.375 1207.1563,95.375 Q1207.8594,95.375 1208.5,95.5313 Q1209.1563,95.6875 1209.7188,95.9844 L1209.7188,98.7031 Q1209.0938,98.125 1208.5,97.8594 Q1207.9063,97.5781 1207.2813,97.5781 Q1205.9375,97.5781 1205.25,98.6563 Q1204.5625,99.7188 1204.5625,101.8125 Q1204.5625,103.9063 1205.25,104.9844 Q1205.9375,106.0469 1207.2813,106.0469 Q1207.9063,106.0469 1208.5,105.7813 Q1209.0938,105.5 1209.7188,104.9219 L1209.7188,107.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="1227.25" y="106.8467">AgentTest</text><line style="stroke:#181818;stroke-width:0.5;" x1="1086" x2="1408" y1="118" y2="118"/><polygon fill="none" points="1096,126.6484,1100,130.6484,1096,134.6484,1092,130.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="263" x="1105" y="134.9951">sAsyncAgent : static Agent::SharedPtr</text><polygon fill="none" points="1096,142.9453,1100,146.9453,1096,150.9453,1092,146.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="298" x="1105" y="151.292">sNoCallbackAgent : static Agent::SharedPtr</text><polygon fill="none" points="1096,159.2422,1100,163.2422,1096,167.2422,1092,163.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="254" x="1105" y="167.5889">sCallback : static Callback::SharedPtr</text><polygon fill="none" points="1096,175.5391,1100,179.5391,1096,183.5391,1092,179.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="1105" y="183.8857">sServer : static Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="1086" x2="1408" y1="191.1875" y2="191.1875"/><polygon fill="#FFFF44" points="1096,199.8359,1100,203.8359,1096,207.8359,1092,203.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1105" y="208.1826">SetUp() : void</text><polygon fill="#FFFF44" points="1096,216.1328,1100,220.1328,1096,224.1328,1092,220.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="1105" y="224.4795">SetUpTestSuite() : void</text><polygon fill="#FFFF44" points="1096,232.4297,1100,236.4297,1096,240.4297,1092,236.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="1105" y="240.7764">TearDownTestSuite() : void</text></g><!--MD5=[e47e86a929398a8db33a862faee5d82a]
class Cmder.Testing.ServerTest--><g id="elem_Cmder.Testing.ServerTest"><rect codeLine="154" fill="#F1F1F1" height="129.4844" id="Cmder.Testing.ServerTest" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="270" x="780" y="102.5"/><ellipse cx="873.25" cy="118.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M876.2188,124.1406 Q875.6406,124.4375 875,124.5781 Q874.3594,124.7344 873.6563,124.7344 Q871.1563,124.7344 869.8281,123.0938 Q868.5156,121.4375 868.5156,118.3125 Q868.5156,115.1875 869.8281,113.5313 Q871.1563,111.875 873.6563,111.875 Q874.3594,111.875 875,112.0313 Q875.6563,112.1875 876.2188,112.4844 L876.2188,115.2031 Q875.5938,114.625 875,114.3594 Q874.4063,114.0781 873.7813,114.0781 Q872.4375,114.0781 871.75,115.1563 Q871.0625,116.2188 871.0625,118.3125 Q871.0625,120.4063 871.75,121.4844 Q872.4375,122.5469 873.7813,122.5469 Q874.4063,122.5469 875,122.2813 Q875.5938,122 876.2188,121.4219 L876.2188,124.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="893.75" y="123.3467">ServerTest</text><line style="stroke:#181818;stroke-width:0.5;" x1="781" x2="1049" y1="134.5" y2="134.5"/><polygon fill="none" points="791,143.1484,795,147.1484,791,151.1484,787,147.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="800" y="151.4951">mServer : std::unique_ptr&lt;Server&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="781" x2="1049" y1="158.7969" y2="158.7969"/><polygon fill="#FFFF44" points="791,167.4453,795,171.4453,791,175.4453,787,171.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="800" y="175.792">SetUp() : void</text><polygon fill="#FFFF44" points="791,183.7422,795,187.7422,791,191.7422,787,187.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="800" y="192.0889">SetUpTestSuite() : void</text><polygon fill="#FFFF44" points="791,200.0391,795,204.0391,791,208.0391,787,204.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="800" y="208.3857">TearDown() : void</text><polygon fill="#FFFF44" points="791,216.3359,795,220.3359,791,224.3359,787,220.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="800" y="224.6826">TearDownTestSuite() : void</text></g><!--MD5=[687e0e93109a4e3b835e34cee365dc7c]
class Callback--><g id="elem_Callback"><rect codeLine="8" fill="#F1F1F1" height="194.6719" id="Callback" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="592" x="1565" y="405.5"/><ellipse cx="1828.25" cy="421.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1831.2188,427.1406 Q1830.6406,427.4375 1830,427.5781 Q1829.3594,427.7344 1828.6563,427.7344 Q1826.1563,427.7344 1824.8281,426.0938 Q1823.5156,424.4375 1823.5156,421.3125 Q1823.5156,418.1875 1824.8281,416.5313 Q1826.1563,414.875 1828.6563,414.875 Q1829.3594,414.875 1830,415.0313 Q1830.6563,415.1875 1831.2188,415.4844 L1831.2188,418.2031 Q1830.5938,417.625 1830,417.3594 Q1829.4063,417.0781 1828.7813,417.0781 Q1827.4375,417.0781 1826.75,418.1563 Q1826.0625,419.2188 1826.0625,421.3125 Q1826.0625,423.4063 1826.75,424.4844 Q1827.4375,425.5469 1828.7813,425.5469 Q1829.4063,425.5469 1830,425.2813 Q1830.5938,425 1831.2188,424.4219 L1831.2188,427.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="1848.75" y="426.3467">Callback</text><line style="stroke:#181818;stroke-width:0.5;" x1="1566" x2="2156" y1="437.5" y2="437.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1573" y="448.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="1585" y="454.4951">mMessages : std::map&lt;Key_t, Message_t&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1573" y="464.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="1585" y="470.792">mMutex : std::mutex</text><line style="stroke:#181818;stroke-width:0.5;" x1="1566" x2="2156" y1="478.0938" y2="478.0938"/><ellipse cx="1576" cy="491.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="1585" y="495.0889">Callback()</text><ellipse cx="1576" cy="508.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1585" y="511.3857">~Callback()</text><ellipse cx="1576" cy="524.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="1585" y="527.6826">operator&lt;&lt;(std::ostream&amp; ostr, const Callback::SharedPtr&amp; cb) : std :: ostream&amp;</text><ellipse cx="1576" cy="540.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="1585" y="543.9795">getFirst(const Receipt&amp; receipt, Type type) : std::optional&lt;Message_t&gt;</text><ellipse cx="1576" cy="556.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="501" x="1585" y="560.2764">waitFirst(const Receipt&amp; receipt, Type type) : std::optional&lt;Message_t&gt;</text><ellipse cx="1576" cy="573.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1585" y="576.5732">clear() : void</text><ellipse cx="1576" cy="589.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="1585" y="592.8701">notify(TaskId taskId, Type type, const std::string&amp; message) : void</text></g><!--MD5=[34b75dd4d6d4601c280a5b76e9c1a953]
class Receipt--><g id="elem_Receipt"><rect codeLine="21" fill="#F1F1F1" height="259.8594" id="Receipt" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="398" x="1612" y="1110"/><ellipse cx="1780.25" cy="1126" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1783.2188,1131.6406 Q1782.6406,1131.9375 1782,1132.0781 Q1781.3594,1132.2344 1780.6563,1132.2344 Q1778.1563,1132.2344 1776.8281,1130.5938 Q1775.5156,1128.9375 1775.5156,1125.8125 Q1775.5156,1122.6875 1776.8281,1121.0313 Q1778.1563,1119.375 1780.6563,1119.375 Q1781.3594,1119.375 1782,1119.5313 Q1782.6563,1119.6875 1783.2188,1119.9844 L1783.2188,1122.7031 Q1782.5938,1122.125 1782,1121.8594 Q1781.4063,1121.5781 1780.7813,1121.5781 Q1779.4375,1121.5781 1778.75,1122.6563 Q1778.0625,1123.7188 1778.0625,1125.8125 Q1778.0625,1127.9063 1778.75,1128.9844 Q1779.4375,1130.0469 1780.7813,1130.0469 Q1781.4063,1130.0469 1782,1129.7813 Q1782.5938,1129.5 1783.2188,1128.9219 L1783.2188,1131.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="1800.75" y="1130.8467">Receipt</text><line style="stroke:#181818;stroke-width:0.5;" x1="1613" x2="2009" y1="1142" y2="1142"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1620" y="1152.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="1632" y="1158.9951">mMode : Mode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1620" y="1168.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1632" y="1175.292">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1620" y="1185.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="1632" y="1191.5889">mEndTime : time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1620" y="1201.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="1632" y="1207.8857">mStartTime : time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1620" y="1217.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1632" y="1224.1826">mTaskId : uint32_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="1613" x2="2009" y1="1231.4844" y2="1231.4844"/><ellipse cx="1623" cy="1245.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1632" y="1248.4795">Receipt(Mode mode)</text><ellipse cx="1623" cy="1261.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="1632" y="1264.7764">getEndTime() : ChronotTime_t&amp; {query}</text><ellipse cx="1623" cy="1277.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="1632" y="1281.0732">getStartTime() : ChronotTime_t&amp; {query}</text><ellipse cx="1623" cy="1294.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="1632" y="1297.3701">getTaskId() : TaskId {query}</text><ellipse cx="1623" cy="1310.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="1632" y="1313.667">getExecutionMode() : int {query}</text><ellipse cx="1623" cy="1326.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="1632" y="1329.9639">getStatus() : int {query}</text><ellipse cx="1623" cy="1342.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1632" y="1346.2607">setEndTime() : void</text><ellipse cx="1623" cy="1359.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1632" y="1362.5576">setStatus(Status status) : void</text></g><!--MD5=[85b7aeefaadb719f4e60472b44e3a0b8]
class Callback::Type--><g id="elem_Callback::Type"><rect codeLine="38" fill="#F1F1F1" height="80.5938" id="Callback::Type" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="1971.75" y="863.5"/><ellipse cx="1986.75" cy="879.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1990.8594,885.5 L1983.1406,885.5 L1983.1406,873.1094 L1990.8594,873.1094 L1990.8594,875.2656 L1985.5938,875.2656 L1985.5938,877.9375 L1990.3594,877.9375 L1990.3594,880.0938 L1985.5938,880.0938 L1985.5938,883.3438 L1990.8594,883.3438 L1990.8594,885.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="2000.75" y="884.3467">Callback::Type</text><line style="stroke:#181818;stroke-width:0.5;" x1="1972.75" x2="2103.75" y1="895.5" y2="895.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1977.75" y="912.4951">NOTIFICATION</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1977.75" y="928.792">RESULT</text><line style="stroke:#181818;stroke-width:0.5;" x1="1972.75" x2="2103.75" y1="936.0938" y2="936.0938"/></g><!--MD5=[56d3b85566b7013b7a0d77cf3a9da218]
class Receipt::Mode--><g id="elem_Receipt::Mode"><rect codeLine="44" fill="#F1F1F1" height="80.5938" id="Receipt::Mode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="1658" y="1430.5"/><ellipse cx="1673" cy="1446.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1677.1094,1452.5 L1669.3906,1452.5 L1669.3906,1440.1094 L1677.1094,1440.1094 L1677.1094,1442.2656 L1671.8438,1442.2656 L1671.8438,1444.9375 L1676.6094,1444.9375 L1676.6094,1447.0938 L1671.8438,1447.0938 L1671.8438,1450.3438 L1677.1094,1450.3438 L1677.1094,1452.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1687" y="1451.3467">Receipt::Mode</text><line style="stroke:#181818;stroke-width:0.5;" x1="1659" x2="1791" y1="1462.5" y2="1462.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1664" y="1479.4951">Async</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="1664" y="1495.792">Blocking</text><line style="stroke:#181818;stroke-width:0.5;" x1="1659" x2="1791" y1="1503.0938" y2="1503.0938"/></g><!--MD5=[c34f78efd55114cb950f71aaddf20012]
class Receipt::Status--><g id="elem_Receipt::Status"><rect codeLine="50" fill="#F1F1F1" height="80.5938" id="Receipt::Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="1827.75" y="1430.5"/><ellipse cx="1842.75" cy="1446.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1846.8594,1452.5 L1839.1406,1452.5 L1839.1406,1440.1094 L1846.8594,1440.1094 L1846.8594,1442.2656 L1841.5938,1442.2656 L1841.5938,1444.9375 L1846.3594,1444.9375 L1846.3594,1447.0938 L1841.5938,1447.0938 L1841.5938,1450.3438 L1846.8594,1450.3438 L1846.8594,1452.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1856.75" y="1451.3467">Receipt::Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="1828.75" x2="1965.75" y1="1462.5" y2="1462.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="1833.75" y="1479.4951">FAIL</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="1833.75" y="1495.792">OK</text><line style="stroke:#181818;stroke-width:0.5;" x1="1828.75" x2="1965.75" y1="1503.0938" y2="1503.0938"/></g><!--MD5=[caac18772e54bee9b64ca90683596fb8]
class Callback::Message_t--><g id="elem_Callback::Message_t"><rect codeLine="56" fill="#F1F1F1" height="80.5938" id="Callback::Message_t" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="1685.75" y="863.5"/><ellipse cx="1736" cy="879.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1738.9688,885.1406 Q1738.3906,885.4375 1737.75,885.5781 Q1737.1094,885.7344 1736.4063,885.7344 Q1733.9063,885.7344 1732.5781,884.0938 Q1731.2656,882.4375 1731.2656,879.3125 Q1731.2656,876.1875 1732.5781,874.5313 Q1733.9063,872.875 1736.4063,872.875 Q1737.1094,872.875 1737.75,873.0313 Q1738.4063,873.1875 1738.9688,873.4844 L1738.9688,876.2031 Q1738.3438,875.625 1737.75,875.3594 Q1737.1563,875.0781 1736.5313,875.0781 Q1735.1875,875.0781 1734.5,876.1563 Q1733.8125,877.2188 1733.8125,879.3125 Q1733.8125,881.4063 1734.5,882.4844 Q1735.1875,883.5469 1736.5313,883.5469 Q1737.1563,883.5469 1737.75,883.2813 Q1738.3438,883 1738.9688,882.4219 L1738.9688,885.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="1756.5" y="884.3467">Callback::Message_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="1686.75" x2="1935.75" y1="895.5" y2="895.5"/><ellipse cx="1696.75" cy="909.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="1705.75" y="912.4951">mTime : Receipt::ChronotTime_t</text><ellipse cx="1696.75" cy="925.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1705.75" y="928.792">mResult : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="1686.75" x2="1935.75" y1="936.0938" y2="936.0938"/></g><!--MD5=[644b5eb9c16c6c1d603327159cdb92d3]
class scoped_logger--><g id="elem_scoped_logger"><rect codeLine="62" fill="#F1F1F1" height="113.1875" id="scoped_logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="607" x="1562.75" y="110.5"/><ellipse cx="1810.5" cy="126.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1813.4688,132.1406 Q1812.8906,132.4375 1812.25,132.5781 Q1811.6094,132.7344 1810.9063,132.7344 Q1808.4063,132.7344 1807.0781,131.0938 Q1805.7656,129.4375 1805.7656,126.3125 Q1805.7656,123.1875 1807.0781,121.5313 Q1808.4063,119.875 1810.9063,119.875 Q1811.6094,119.875 1812.25,120.0313 Q1812.9063,120.1875 1813.4688,120.4844 L1813.4688,123.2031 Q1812.8438,122.625 1812.25,122.3594 Q1811.6563,122.0781 1811.0313,122.0781 Q1809.6875,122.0781 1809,123.1563 Q1808.3125,124.2188 1808.3125,126.3125 Q1808.3125,128.4063 1809,129.4844 Q1809.6875,130.5469 1811.0313,130.5469 Q1811.6563,130.5469 1812.25,130.2813 Q1812.8438,130 1813.4688,129.4219 L1813.4688,132.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1831" y="131.3467">scoped_logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="1563.75" x2="2168.75" y1="142.5" y2="142.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1570.75" y="153.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1582.75" y="159.4951">_ss : std::stringstream</text><line style="stroke:#181818;stroke-width:0.5;" x1="1563.75" x2="2168.75" y1="166.7969" y2="166.7969"/><ellipse cx="1573.75" cy="180.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="1582.75" y="183.792">scoped_logger(const std::string&amp; className, const char* funcName, unsigned line)</text><ellipse cx="1573.75" cy="196.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1582.75" y="200.0889">~scoped_logger()</text><ellipse cx="1573.75" cy="213.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1582.75" y="216.3857">stream() : std::stringstream&amp;</text></g><!--MD5=[ab38a78e8acf248efd1cc74ac7d17596]
reverse link Cmder.IControllableThread to Cmder.Agent--><g id="link_Cmder.IControllableThread_Cmder.Agent"><path codeLine="170" d="M708.889,229.3 C725.847,244.44 744.884,259.8 764,272 C798.242,293.85 811.524,290.13 848,308 C854.083,310.98 860.21,314.01 866.37,317.09 " fill="none" id="Cmder.IControllableThread-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="703.926,234.24,693.956,215.54,713.41,223.94,703.926,234.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[39a07376048056f82c79dcfba4c09acb]
reverse link Cmder.IControllableThread to Cmder.Server--><g id="link_Cmder.IControllableThread_Cmder.Server"><path codeLine="173" d="M592.99,229.68 C575.16,246.03 554.206,261.91 532,272 C472.072,299.22 281.623,258.71 238,308 C180.562,372.9 195.48,622.481 238,698 C258.034,733.582 287.015,763.699 319.7,788.967 " fill="none" id="Cmder.IControllableThread-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="588.256,224.52,607.498,215.65,597.99,234.59,588.256,224.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fa9cb4c0493c49006535f851308b7d50]
reverse link Cmder.IStatProvider to Cmder.Server--><g id="link_Cmder.IStatProvider_Cmder.Server"><path codeLine="176" d="M576,555.575 C576,606.591 576,687.057 576,757.708 " fill="none" id="Cmder.IStatProvider-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="569,555.309,576,535.309,583,555.309,569,555.309" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fbdf90a246226e85fc52c953f7eefd33]
reverse link Cmder.Agent to Callback--><g id="link_Cmder.Agent_Callback"><path codeLine="184" d="M1542.73,503 C1550.08,503 1557.44,503 1564.79,503 " fill="none" id="Cmder.Agent-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1529.5,503,1535.5,507,1541.5,503,1535.5,499,1529.5,503" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5f070a83d3a92dfae157d3f8d058d8ab]
reverse link Cmder.Agent to Cmder.Server--><g id="link_Cmder.Agent_Cmder.Server"><path codeLine="187" d="M871.423,705.314 C843.74,723.077 816.223,740.822 789.748,757.984 " fill="none" id="Cmder.Agent-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="882.453,698.24,875.243,698.1116,872.3515,704.7176,879.5615,704.846,882.453,698.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[22c02906b7bf5eef95c36d5fdf2c0b9f]
reverse link Cmder.Server to Cmder.Agent--><g id="link_Cmder.Server_Cmder.Agent"><path codeLine="208" d="M826.279,750.89 C853.401,733.656 881.162,715.92 908.695,698.24 " fill="none" id="Cmder.Server-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="815.108,757.984,822.3173,758.1444,825.2382,751.5514,818.0289,751.391,815.108,757.984" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[208de34f581ccb6e0c9473f02a0d7dd0]
reverse link Cmder.Agent to Cmder.Status--><g id="link_Cmder.Agent_Cmder.Status"><path codeLine="190" d="M1087.8,709.577 C1001.48,870.614 887.357,1083.499 833.959,1183.113 " fill="none" id="Cmder.Agent-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1093.97,698.074,1087.6099,701.4724,1088.3007,708.6503,1094.6608,705.2519,1093.97,698.074" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[acbca8f51b8f134ee641c3769debd151]
reverse link Cmder.Testing.AgentTest to Cmder.Agent--><g id="link_Cmder.Testing.AgentTest_Cmder.Agent"><path codeLine="193" d="M1233.32,261.27 C1231.15,276.02 1228.85,291.74 1226.49,307.8 " fill="none" id="Cmder.Testing.AgentTest-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1235.26,248,1230.4325,253.3568,1233.5205,259.8733,1238.348,254.5165,1235.26,248" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="1224.7168" y="268.228">2</text></g><!--MD5=[b7ed66f30699f3d749314a60335d18bb]
reverse link Cmder.Testing.AgentTest to Callback--><g id="link_Cmder.Testing.AgentTest_Callback"><path codeLine="196" d="M1421.17,245.46 C1462.54,264.98 1506.2,286.52 1546,308 C1601.25,337.82 1660.23,373.15 1712.04,405.44 " fill="none" id="Cmder.Testing.AgentTest-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1409.28,239.88,1413.0075,246.053,1420.1393,244.9864,1416.4118,238.8134,1409.28,239.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dac00d6dac2d87be23a4764571de12a3]
reverse link Cmder.Testing.AgentTest to Cmder.Server--><g id="link_Cmder.Testing.AgentTest_Cmder.Server"><path codeLine="199" d="M1114.32,253.78 C1098.82,261.02 1082.87,267.34 1067,272 C985.457,295.93 361.661,246.51 303,308 C273.089,339.35 283.632,659.236 303,698 C313.795,719.606 328.071,739.528 344.446,757.755 " fill="none" id="Cmder.Testing.AgentTest-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1126.08,248.07,1118.9356,247.0912,1115.2843,253.3095,1122.4286,254.2883,1126.08,248.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8672172a630260964f6faa239709a3cf]
reverse link Callback::Message_t to Receipt--><g id="link_Callback::Message_t_Receipt"><path codeLine="202" d="M1811,957.761 C1811,998.564 1811,1056.842 1811,1109.775 " fill="none" id="Callback::Message_t-backto-Receipt" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1811,944.626,1807,950.626,1811,956.626,1815,950.626,1811,944.626" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[487fb8a49337b43a59761822cfb8472c]
reverse link Receipt to Cmder.Status--><g id="link_Receipt_Cmder.Status"><path codeLine="205" d="M1598.73,1240 C1346.6,1240 1094.48,1240 842.353,1240 " fill="none" id="Receipt-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1611.88,1240,1605.88,1236,1599.88,1240,1605.88,1244,1611.88,1240" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9f9f142becf0c0bde389e9081cee633b]
reverse link Cmder.Server to Cmder.Status--><g id="link_Cmder.Server_Cmder.Status"><path codeLine="211" d="M682.393,1060.856 C712.319,1104.696 742.948,1149.564 765.98,1183.305 " fill="none" id="Cmder.Server-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="675.009,1050.04,675.0877,1057.2507,681.774,1059.9514,681.6953,1052.7407,675.009,1050.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[98c558907183f545df7ce44ab7c00f56]
reverse link Cmder.Testing.ServerTest to Cmder.Server--><g id="link_Cmder.Testing.ServerTest_Cmder.Server"><path codeLine="214" d="M835.486,239.37 C817.085,252.37 796.773,264.25 776,272 C723.709,291.51 313.023,267.15 275,308 C215.954,371.44 234.484,621.387 275,698 C286.749,720.217 302.106,740.477 319.668,758.852 " fill="none" id="Cmder.Testing.ServerTest-backto-Cmder.Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="846.088,231.61,838.8837,231.923,836.4017,238.6935,843.606,238.3805,846.088,231.61" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[59543f07a28b41313b01d526ae5b31f0]
reverse link Callback to Callback::Message_t--><g id="link_Callback_Callback::Message_t"><path codeLine="223" d="M1847,615.713 C1836.64,698.383 1823.13,806.174 1815.97,863.347 " fill="none" id="Callback-backto-Callback::Message_t" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1847.9058" cy="608.525" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1846.9117" x2="1848.9" y1="616.463" y2="600.587"/><line style="stroke:#181818;stroke-width:1.0;" x1="1839.9679" x2="1855.8438" y1="607.5308" y2="609.5191"/></g><!--MD5=[b786da24d691ca71eb7a2d6158d415f7]
reverse link Callback to Callback::Type--><g id="link_Callback_Callback::Type"><path codeLine="226" d="M1909.99,614.429 C1946.73,697.263 1994.92,805.878 2020.41,863.347 " fill="none" id="Callback-backto-Callback::Type" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1907.0936" cy="607.8999" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1910.3372" x2="1903.85" y1="615.2129" y2="600.587"/><line style="stroke:#181818;stroke-width:1.0;" x1="1899.7807" x2="1914.4065" y1="611.1435" y2="604.6563"/></g><!--MD5=[337e37ce856fbf4a62df92e975117e08]
reverse link Receipt to Receipt::Mode--><g id="link_Receipt_Receipt::Mode"><path codeLine="229" d="M1757.12,1384.465 C1750.83,1401.212 1744.88,1417.0747 1739.84,1430.4869 " fill="none" id="Receipt-backto-Receipt::Mode" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1759.6572" cy="1377.7122" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1756.8443" x2="1762.47" y1="1385.2014" y2="1370.223"/><line style="stroke:#181818;stroke-width:1.0;" x1="1752.168" x2="1767.1464" y1="1374.8994" y2="1380.525"/></g><!--MD5=[ff8f68cd9860b13c4e769e1081d0a27c]
reverse link Receipt to Receipt::Status--><g id="link_Receipt_Receipt::Status"><path codeLine="232" d="M1864.88,1384.465 C1871.17,1401.212 1877.12,1417.0747 1882.16,1430.4869 " fill="none" id="Receipt-backto-Receipt::Status" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1862.3428" cy="1377.7122" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1865.1557" x2="1859.53" y1="1385.2014" y2="1370.223"/><line style="stroke:#181818;stroke-width:1.0;" x1="1854.8536" x2="1869.832" y1="1380.525" y2="1374.8994"/></g><!--MD5=[c5fcf80cf9c4beb4ff422f9e79f5e684]
reverse link Cmder.Task to Cmder.Task::TaskConfig--><g id="link_Cmder.Task_Cmder.Task::TaskConfig"><path codeLine="235" d="M291.604,209.52 C263.184,235.93 227.533,271.85 201,308 C159.146,365.03 123.867,441.27 107.61,478.94 " fill="none" id="Cmder.Task-backto-Cmder.Task::TaskConfig" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="296.9984" cy="204.5754" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="291.1008" x2="302.896" y1="209.9808" y2="199.17"/><line style="stroke:#181818;stroke-width:1.0;" x1="291.593" x2="302.4038" y1="198.6778" y2="210.473"/></g><!--MD5=[917289f1ed0935fa1346a89abb00704f]
@startuml





/' Objects '/

class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<Key_t, Message_t>
    -mMutex : std::mutex
    +getFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +waitFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +clear() : void
    +notify(TaskId taskId, Type type, const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    +getEndTime() : ChronotTime_t& {query}
    +getStartTime() : ChronotTime_t& {query}
    -mMode : Mode
    -mStatus : Status
    +getTaskId() : TaskId {query}
    +getExecutionMode() : int {query}
    +getStatus() : int {query}
    -mEndTime : time_point<std::chrono::system_clock>
    -mStartTime : time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
    +setStatus(Status status) : void
}


enum Callback::Type {
    NOTIFICATION
    RESULT
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Receipt::Status {
    FAIL
    OK
}


class Callback::Message_t {
    +mTime : Receipt::ChronotTime_t
    +mResult : std::string
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}


namespace Cmder {
    class Agent {
        -Agent(Server& server, Callback::SharedPtr callback)
        +~Agent()
        -mCallback : Callback::SharedPtr
        +doTask(Receipt::Mode mode, const TaskName& task, std::string& result) : Receipt {query}
        -mServer : Server&
        +{static} create(Server& server, Callback::SharedPtr callback) : SharedPtr
        +getStatus() : Status {query}
        -mStatus : Status
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotifications : std::queue<std::string>
        -mDebugName : std::string
        +getName() : std::string& {query}
        -mThreadPtr : std::unique_ptr<std::thread>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        +notify(const std::string& message) : void
        +registerAgent() : void
        -run() : void
        +start() : void
        +stop() : void
        +unregisterAgent() : void
    }

    abstract class IControllableThread {
        +{abstract} getStatus() : int {query}
        +{abstract} start() : void
        +{abstract} stop() : void
    }

    abstract class IStatProvider {
        +{abstract} statNotification(const std::string& notificationName) : uint64_t {query}
    }

    class Server {
        +Server()
        +~Server()
        +getStatus() : Cmder::Status {query}
        -mStatus : Status
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotificationStatistics : std::map<std::string, uint64_t>
        -mThreadPtr : std::unique_ptr<std::thread>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        -mAgents : vector<Agent::WeakPtr>
        +registerAgent(Agent::SharedPtr agent) : void
        -run() : void
        +start() : void
        +stop() : void
        +unregister(const std::string agentName) : void
    }

    class Task {
        -mTaskConfiguration : std::vector<TaskConfig>
    }

    enum Status {
        Init
        Run
        Start
        Stop
    }

    enum TaskName {
        BlockMe_3s
        Pi
        PingMe_5x
    }

    class Task::TaskConfig {
    }

    namespace Testing {
        class AgentTest {
            #{static} sAsyncAgent : static Agent::SharedPtr
            #{static} sNoCallbackAgent : static Agent::SharedPtr
            #{static} sCallback : static Callback::SharedPtr
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }

        class ServerTest {
            #mServer : std::unique_ptr<Server>
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #TearDown() : void
            #{static} TearDownTestSuite() : void
        }
    }
}





/' Inheritance relationships '/

Cmder.IControllableThread <|- - Cmder.Agent


Cmder.IControllableThread <|- - Cmder.Server


Cmder.IStatProvider <|- - Cmder.Server





/' Aggregation relationships '/

Cmder.Agent *- - .Callback


Cmder.Agent *- - Cmder.Server


Cmder.Agent *- - Cmder.Status


Cmder.Testing.AgentTest "2" *- - Cmder.Agent


Cmder.Testing.AgentTest *- - .Callback


Cmder.Testing.AgentTest *- - Cmder.Server


.Callback::Message_t *- - .Receipt


.Receipt *- - Cmder.Status


Cmder.Server *- - Cmder.Agent


Cmder.Server *- - Cmder.Status


Cmder.Testing.ServerTest *- - Cmder.Server






/' Nested objects '/

.Callback +- - .Callback::Message_t


.Callback +- - .Callback::Type


.Receipt +- - .Receipt::Mode


.Receipt +- - .Receipt::Status


Cmder.Task +- - Cmder.Task::TaskConfig




@enduml

@startuml






class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<Key_t, Message_t>
    -mMutex : std::mutex
    +getFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +waitFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +clear() : void
    +notify(TaskId taskId, Type type, const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    +getEndTime() : ChronotTime_t& {query}
    +getStartTime() : ChronotTime_t& {query}
    -mMode : Mode
    -mStatus : Status
    +getTaskId() : TaskId {query}
    +getExecutionMode() : int {query}
    +getStatus() : int {query}
    -mEndTime : time_point<std::chrono::system_clock>
    -mStartTime : time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
    +setStatus(Status status) : void
}


enum Callback::Type {
    NOTIFICATION
    RESULT
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Receipt::Status {
    FAIL
    OK
}


class Callback::Message_t {
    +mTime : Receipt::ChronotTime_t
    +mResult : std::string
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}


namespace Cmder {
    class Agent {
        -Agent(Server& server, Callback::SharedPtr callback)
        +~Agent()
        -mCallback : Callback::SharedPtr
        +doTask(Receipt::Mode mode, const TaskName& task, std::string& result) : Receipt {query}
        -mServer : Server&
        +{static} create(Server& server, Callback::SharedPtr callback) : SharedPtr
        +getStatus() : Status {query}
        -mStatus : Status
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotifications : std::queue<std::string>
        -mDebugName : std::string
        +getName() : std::string& {query}
        -mThreadPtr : std::unique_ptr<std::thread>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        +notify(const std::string& message) : void
        +registerAgent() : void
        -run() : void
        +start() : void
        +stop() : void
        +unregisterAgent() : void
    }

    abstract class IControllableThread {
        +{abstract} getStatus() : int {query}
        +{abstract} start() : void
        +{abstract} stop() : void
    }

    abstract class IStatProvider {
        +{abstract} statNotification(const std::string& notificationName) : uint64_t {query}
    }

    class Server {
        +Server()
        +~Server()
        +getStatus() : Cmder::Status {query}
        -mStatus : Status
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mNotificationStatistics : std::map<std::string, uint64_t>
        -mThreadPtr : std::unique_ptr<std::thread>
        +statNotification(const std::string& notificationName) : uint64_t {query}
        -mAgents : vector<Agent::WeakPtr>
        +registerAgent(Agent::SharedPtr agent) : void
        -run() : void
        +start() : void
        +stop() : void
        +unregister(const std::string agentName) : void
    }

    class Task {
        -mTaskConfiguration : std::vector<TaskConfig>
    }

    enum Status {
        Init
        Run
        Start
        Stop
    }

    enum TaskName {
        BlockMe_3s
        Pi
        PingMe_5x
    }

    class Task::TaskConfig {
    }

    namespace Testing {
        class AgentTest {
            #{static} sAsyncAgent : static Agent::SharedPtr
            #{static} sNoCallbackAgent : static Agent::SharedPtr
            #{static} sCallback : static Callback::SharedPtr
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }

        class ServerTest {
            #mServer : std::unique_ptr<Server>
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #TearDown() : void
            #{static} TearDownTestSuite() : void
        }
    }
}






Cmder.IControllableThread <|- - Cmder.Agent


Cmder.IControllableThread <|- - Cmder.Server


Cmder.IStatProvider <|- - Cmder.Server






Cmder.Agent *- - .Callback


Cmder.Agent *- - Cmder.Server


Cmder.Agent *- - Cmder.Status


Cmder.Testing.AgentTest "2" *- - Cmder.Agent


Cmder.Testing.AgentTest *- - .Callback


Cmder.Testing.AgentTest *- - Cmder.Server


.Callback::Message_t *- - .Receipt


.Receipt *- - Cmder.Status


Cmder.Server *- - Cmder.Agent


Cmder.Server *- - Cmder.Status


Cmder.Testing.ServerTest *- - Cmder.Server







.Callback +- - .Callback::Message_t


.Callback +- - .Callback::Type


.Receipt +- - .Receipt::Mode


.Receipt +- - .Receipt::Status


Cmder.Task +- - Cmder.Task::TaskConfig




@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(EPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>