<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1242px" preserveAspectRatio="none" style="width:2103px;height:1242px;background:#FFFFFF;" version="1.1" viewBox="0 0 2103 1242" width="2103px" zoomAndPan="magnify"><defs/><g><!--MD5=[6669928f3067a619cffd39cae9441b58]
cluster Cmder--><g id="cluster_Cmder"><path d="M617.5,6 L670.5,6 A3.75,3.75 0 0 1 673,8.5 L680,28.2969 L1470.5,28.2969 A2.5,2.5 0 0 1 1473,30.7969 L1473,787.5 A2.5,2.5 0 0 1 1470.5,790 L617.5,790 A2.5,2.5 0 0 1 615,787.5 L615,8.5 A2.5,2.5 0 0 1 617.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="615" x2="680" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="619" y="20.9951">Cmder</text></g><!--MD5=[e902e7dcfcb16454252f8a4b8b16b082]
cluster Cmder.Testing--><g id="cluster_Cmder.Testing"><path d="M846.5,50 L906.5,50 A3.75,3.75 0 0 1 909,52.5 L916,72.2969 L1446.5,72.2969 A2.5,2.5 0 0 1 1449,74.7969 L1449,261.5 A2.5,2.5 0 0 1 1446.5,264 L846.5,264 A2.5,2.5 0 0 1 844,261.5 L844,52.5 A2.5,2.5 0 0 1 846.5,50 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="844" x2="916" y1="72.2969" y2="72.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="848" y="64.9951">Testing</text></g><!--MD5=[6b27664959a1ba1f602f4c17304ec430]
class Cmder.Agent--><g id="elem_Cmder.Agent"><rect codeLine="95" fill="#F1F1F1" height="292.4531" id="Cmder.Agent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="568" x="686" y="308"/><ellipse cx="945.25" cy="324" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M948.2188,329.6406 Q947.6406,329.9375 947,330.0781 Q946.3594,330.2344 945.6563,330.2344 Q943.1563,330.2344 941.8281,328.5938 Q940.5156,326.9375 940.5156,323.8125 Q940.5156,320.6875 941.8281,319.0313 Q943.1563,317.375 945.6563,317.375 Q946.3594,317.375 947,317.5313 Q947.6563,317.6875 948.2188,317.9844 L948.2188,320.7031 Q947.5938,320.125 947,319.8594 Q946.4063,319.5781 945.7813,319.5781 Q944.4375,319.5781 943.75,320.6563 Q943.0625,321.7188 943.0625,323.8125 Q943.0625,325.9063 943.75,326.9844 Q944.4375,328.0469 945.7813,328.0469 Q946.4063,328.0469 947,327.7813 Q947.5938,327.5 948.2188,326.9219 L948.2188,329.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="965.75" y="328.8467">Agent</text><line style="stroke:#181818;stroke-width:0.5;" x1="687" x2="1253" y1="340" y2="340"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="350.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="706" y="356.9951">mCallback : Callback::SharedPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="366.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="706" y="373.292">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="383.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="706" y="389.5889">mServer : const Server&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="399.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="706" y="405.8857">mMutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="415.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="706" y="422.1826">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="432.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="706" y="438.4795">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="687" x2="1253" y1="445.7813" y2="445.7813"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="456.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="706" y="462.7764">Agent(const Server&amp; server, Callback::SharedPtr callback)</text><ellipse cx="697" cy="475.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="706" y="479.0732">~Agent()</text><ellipse cx="697" cy="492.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="542" x="706" y="495.3701">doTask(Receipt::Mode mode, Task task, std::string&amp; result) : Receipt {query}</text><ellipse cx="697" cy="508.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="440" x="706" y="511.667">create(Server&amp; server, Callback::SharedPtr callback) : SharedPtr</text><ellipse cx="697" cy="524.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="706" y="527.9639">getStatus() : Status {query}</text><ellipse cx="697" cy="540.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="706" y="544.2607">notify(const std::string&amp; message) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="694" y="554.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="706" y="560.5576">run() : void</text><ellipse cx="697" cy="573.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="706" y="576.8545">start() : void</text><ellipse cx="697" cy="589.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="706" y="593.1514">stop() : void</text></g><!--MD5=[2526fb78d29621537a2d0a39abc55676]
class Cmder.IControllableThread--><g id="elem_Cmder.IControllableThread"><rect codeLine="113" fill="#F1F1F1" height="96.8906" id="Cmder.IControllableThread" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="631" y="118.5"/><ellipse cx="658.15" cy="134.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M658.2594,129.8438 L657.1031,134.9219 L659.4313,134.9219 L658.2594,129.8438 Z M656.775,127.6094 L659.7594,127.6094 L663.1188,140 L660.6656,140 L659.9,136.9375 L656.6188,136.9375 L655.8688,140 L653.4313,140 L656.775,127.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="135" x="674.85" y="139.3467">IControllableThread</text><line style="stroke:#181818;stroke-width:0.5;" x1="632" x2="824" y1="150.5" y2="150.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="632" x2="824" y1="158.5" y2="158.5"/><ellipse cx="642" cy="172.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="168" x="651" y="175.4951">getStatus() : int {query}</text><ellipse cx="642" cy="188.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="651" y="191.792">start() : void</text><ellipse cx="642" cy="204.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="651" y="208.0889">stop() : void</text></g><!--MD5=[a01f43714d2ce6bef65710a08e458115]
class Cmder.Agent::Task--><g id="elem_Cmder.Agent::Task"><rect codeLine="119" fill="#F1F1F1" height="96.8906" id="Cmder.Agent::Task" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="846" y="668.5"/><ellipse cx="861" cy="684.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M865.1094,690.5 L857.3906,690.5 L857.3906,678.1094 L865.1094,678.1094 L865.1094,680.2656 L859.8438,680.2656 L859.8438,682.9375 L864.6094,682.9375 L864.6094,685.0938 L859.8438,685.0938 L859.8438,688.3438 L865.1094,688.3438 L865.1094,690.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="875" y="689.3467">Agent::Task</text><line style="stroke:#181818;stroke-width:0.5;" x1="847" x2="961" y1="700.5" y2="700.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="852" y="717.4951">BlockMe_3s</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="852" y="733.792">Pi</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="852" y="750.0889">PingMe_5x</text><line style="stroke:#181818;stroke-width:0.5;" x1="847" x2="961" y1="757.3906" y2="757.3906"/></g><!--MD5=[f7491cd3ca834088eb93961ee9671336]
class Cmder.Status--><g id="elem_Cmder.Status"><rect codeLine="125" fill="#F1F1F1" height="113.1875" id="Cmder.Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="997" y="660.5"/><ellipse cx="1012" cy="676.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1016.1094,682.5 L1008.3906,682.5 L1008.3906,670.1094 L1016.1094,670.1094 L1016.1094,672.2656 L1010.8438,672.2656 L1010.8438,674.9375 L1015.6094,674.9375 L1015.6094,677.0938 L1010.8438,677.0938 L1010.8438,680.3438 L1016.1094,680.3438 L1016.1094,682.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="1026" y="681.3467">Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="998" x2="1072" y1="692.5" y2="692.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="1003" y="709.4951">Init</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="1003" y="725.792">Run</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1003" y="742.0889">Start</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1003" y="758.3857">Stop</text><line style="stroke:#181818;stroke-width:0.5;" x1="998" x2="1072" y1="765.6875" y2="765.6875"/></g><!--MD5=[b101834b75e1f62a3cf6dd626de36055]
class Cmder.Testing.AgentTest--><g id="elem_Cmder.Testing.AgentTest"><rect codeLine="133" fill="#F1F1F1" height="162.0781" id="Cmder.Testing.AgentTest" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="324" x="860" y="86"/><ellipse cx="981.75" cy="102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M984.7188,107.6406 Q984.1406,107.9375 983.5,108.0781 Q982.8594,108.2344 982.1563,108.2344 Q979.6563,108.2344 978.3281,106.5938 Q977.0156,104.9375 977.0156,101.8125 Q977.0156,98.6875 978.3281,97.0313 Q979.6563,95.375 982.1563,95.375 Q982.8594,95.375 983.5,95.5313 Q984.1563,95.6875 984.7188,95.9844 L984.7188,98.7031 Q984.0938,98.125 983.5,97.8594 Q982.9063,97.5781 982.2813,97.5781 Q980.9375,97.5781 980.25,98.6563 Q979.5625,99.7188 979.5625,101.8125 Q979.5625,103.9063 980.25,104.9844 Q980.9375,106.0469 982.2813,106.0469 Q982.9063,106.0469 983.5,105.7813 Q984.0938,105.5 984.7188,104.9219 L984.7188,107.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="1002.25" y="106.8467">AgentTest</text><line style="stroke:#181818;stroke-width:0.5;" x1="861" x2="1183" y1="118" y2="118"/><polygon fill="none" points="871,126.6484,875,130.6484,871,134.6484,867,130.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="263" x="880" y="134.9951">sAsyncAgent : static Agent::SharedPtr</text><polygon fill="none" points="871,142.9453,875,146.9453,871,150.9453,867,146.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="298" x="880" y="151.292">sNoCallbackAgent : static Agent::SharedPtr</text><polygon fill="none" points="871,159.2422,875,163.2422,871,167.2422,867,163.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="254" x="880" y="167.5889">sCallback : static Callback::SharedPtr</text><polygon fill="none" points="871,175.5391,875,179.5391,871,183.5391,867,179.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="880" y="183.8857">sServer : static Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="861" x2="1183" y1="191.1875" y2="191.1875"/><polygon fill="#FFFF44" points="871,199.8359,875,203.8359,871,207.8359,867,203.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="880" y="208.1826">SetUp() : void</text><polygon fill="#FFFF44" points="871,216.1328,875,220.1328,871,224.1328,867,220.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="880" y="224.4795">SetUpTestSuite() : void</text><polygon fill="#FFFF44" points="871,232.4297,875,236.4297,871,240.4297,867,236.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="880" y="240.7764">TearDownTestSuite() : void</text></g><!--MD5=[e47e86a929398a8db33a862faee5d82a]
class Cmder.Testing.ServerTest--><g id="elem_Cmder.Testing.ServerTest"><rect codeLine="143" fill="#F1F1F1" height="113.1875" id="Cmder.Testing.ServerTest" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="1219" y="110.5"/><ellipse cx="1284.25" cy="126.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1287.2188,132.1406 Q1286.6406,132.4375 1286,132.5781 Q1285.3594,132.7344 1284.6563,132.7344 Q1282.1563,132.7344 1280.8281,131.0938 Q1279.5156,129.4375 1279.5156,126.3125 Q1279.5156,123.1875 1280.8281,121.5313 Q1282.1563,119.875 1284.6563,119.875 Q1285.3594,119.875 1286,120.0313 Q1286.6563,120.1875 1287.2188,120.4844 L1287.2188,123.2031 Q1286.5938,122.625 1286,122.3594 Q1285.4063,122.0781 1284.7813,122.0781 Q1283.4375,122.0781 1282.75,123.1563 Q1282.0625,124.2188 1282.0625,126.3125 Q1282.0625,128.4063 1282.75,129.4844 Q1283.4375,130.5469 1284.7813,130.5469 Q1285.4063,130.5469 1286,130.2813 Q1286.5938,130 1287.2188,129.4219 L1287.2188,132.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="1304.75" y="131.3467">ServerTest</text><line style="stroke:#181818;stroke-width:0.5;" x1="1220" x2="1432" y1="142.5" y2="142.5"/><polygon fill="none" points="1230,151.1484,1234,155.1484,1230,159.1484,1226,155.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="1239" y="159.4951">sServer : static Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="1220" x2="1432" y1="166.7969" y2="166.7969"/><polygon fill="#FFFF44" points="1230,175.4453,1234,179.4453,1230,183.4453,1226,179.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1239" y="183.792">SetUp() : void</text><polygon fill="#FFFF44" points="1230,191.7422,1234,195.7422,1230,199.7422,1226,195.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="1239" y="200.0889">SetUpTestSuite() : void</text><polygon fill="#FFFF44" points="1230,208.0391,1234,212.0391,1230,216.0391,1226,212.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="1239" y="216.3857">TearDownTestSuite() : void</text></g><!--MD5=[687e0e93109a4e3b835e34cee365dc7c]
class Callback--><g id="elem_Callback"><rect codeLine="8" fill="#F1F1F1" height="194.6719" id="Callback" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="592" x="7" y="356.5"/><ellipse cx="270.25" cy="372.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M273.2188,378.1406 Q272.6406,378.4375 272,378.5781 Q271.3594,378.7344 270.6563,378.7344 Q268.1563,378.7344 266.8281,377.0938 Q265.5156,375.4375 265.5156,372.3125 Q265.5156,369.1875 266.8281,367.5313 Q268.1563,365.875 270.6563,365.875 Q271.3594,365.875 272,366.0313 Q272.6563,366.1875 273.2188,366.4844 L273.2188,369.2031 Q272.5938,368.625 272,368.3594 Q271.4063,368.0781 270.7813,368.0781 Q269.4375,368.0781 268.75,369.1563 Q268.0625,370.2188 268.0625,372.3125 Q268.0625,374.4063 268.75,375.4844 Q269.4375,376.5469 270.7813,376.5469 Q271.4063,376.5469 272,376.2813 Q272.5938,376 273.2188,375.4219 L273.2188,378.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="290.75" y="377.3467">Callback</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="598" y1="388.5" y2="388.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="399.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="27" y="405.4951">mMessages : std::map&lt;Key_t, Message_t&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="415.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="27" y="421.792">mMutex : std::mutex</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="598" y1="429.0938" y2="429.0938"/><ellipse cx="18" cy="442.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="27" y="446.0889">Callback()</text><ellipse cx="18" cy="459.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="27" y="462.3857">~Callback()</text><ellipse cx="18" cy="475.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="27" y="478.6826">operator&lt;&lt;(std::ostream&amp; ostr, const Callback::SharedPtr&amp; cb) : std :: ostream&amp;</text><ellipse cx="18" cy="491.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="27" y="494.9795">getFirst(const Receipt&amp; receipt, Type type) : std::optional&lt;Message_t&gt;</text><ellipse cx="18" cy="507.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="501" x="27" y="511.2764">waitFirst(const Receipt&amp; receipt, Type type) : std::optional&lt;Message_t&gt;</text><ellipse cx="18" cy="524.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="27" y="527.5732">clear() : void</text><ellipse cx="18" cy="540.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="27" y="543.8701">notify(TaskId taskId, Type type, const std::string&amp; message) : void</text></g><!--MD5=[34b75dd4d6d4601c280a5b76e9c1a953]
class Receipt--><g id="elem_Receipt"><rect codeLine="21" fill="#F1F1F1" height="259.8594" id="Receipt" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="398" x="470" y="834"/><ellipse cx="638.25" cy="850" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M641.2188,855.6406 Q640.6406,855.9375 640,856.0781 Q639.3594,856.2344 638.6563,856.2344 Q636.1563,856.2344 634.8281,854.5938 Q633.5156,852.9375 633.5156,849.8125 Q633.5156,846.6875 634.8281,845.0313 Q636.1563,843.375 638.6563,843.375 Q639.3594,843.375 640,843.5313 Q640.6563,843.6875 641.2188,843.9844 L641.2188,846.7031 Q640.5938,846.125 640,845.8594 Q639.4063,845.5781 638.7813,845.5781 Q637.4375,845.5781 636.75,846.6563 Q636.0625,847.7188 636.0625,849.8125 Q636.0625,851.9063 636.75,852.9844 Q637.4375,854.0469 638.7813,854.0469 Q639.4063,854.0469 640,853.7813 Q640.5938,853.5 641.2188,852.9219 L641.2188,855.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="658.75" y="854.8467">Receipt</text><line style="stroke:#181818;stroke-width:0.5;" x1="471" x2="867" y1="866" y2="866"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="478" y="876.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="490" y="882.9951">mMode : Mode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="478" y="892.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="490" y="899.292">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="478" y="909.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="490" y="915.5889">mEndTime : time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="478" y="925.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="490" y="931.8857">mStartTime : time_point&lt;std::chrono::system_clock&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="478" y="941.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="490" y="948.1826">mTaskId : uint32_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="471" x2="867" y1="955.4844" y2="955.4844"/><ellipse cx="481" cy="969.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="490" y="972.4795">Receipt(Mode mode)</text><ellipse cx="481" cy="985.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="490" y="988.7764">getEndTime() : ChronotTime_t&amp; {query}</text><ellipse cx="481" cy="1001.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="490" y="1005.0732">getStartTime() : ChronotTime_t&amp; {query}</text><ellipse cx="481" cy="1018.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="490" y="1021.3701">getTaskId() : TaskId {query}</text><ellipse cx="481" cy="1034.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="490" y="1037.667">getExecutionMode() : int {query}</text><ellipse cx="481" cy="1050.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="490" y="1053.9639">getStatus() : int {query}</text><ellipse cx="481" cy="1066.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="490" y="1070.2607">setEndTime() : void</text><ellipse cx="481" cy="1083.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="490" y="1086.5576">setStatus(Status status) : void</text></g><!--MD5=[c60af77fe5573b84a4aa4bce89659574]
class Server--><g id="elem_Server"><rect codeLine="38" fill="#F1F1F1" height="243.5625" id="Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="334" x="1489" y="332"/><ellipse cx="1629.75" cy="348" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1632.7188,353.6406 Q1632.1406,353.9375 1631.5,354.0781 Q1630.8594,354.2344 1630.1563,354.2344 Q1627.6563,354.2344 1626.3281,352.5938 Q1625.0156,350.9375 1625.0156,347.8125 Q1625.0156,344.6875 1626.3281,343.0313 Q1627.6563,341.375 1630.1563,341.375 Q1630.8594,341.375 1631.5,341.5313 Q1632.1563,341.6875 1632.7188,341.9844 L1632.7188,344.7031 Q1632.0938,344.125 1631.5,343.8594 Q1630.9063,343.5781 1630.2813,343.5781 Q1628.9375,343.5781 1628.25,344.6563 Q1627.5625,345.7188 1627.5625,347.8125 Q1627.5625,349.9063 1628.25,350.9844 Q1628.9375,352.0469 1630.2813,352.0469 Q1630.9063,352.0469 1631.5,351.7813 Q1632.0938,351.5 1632.7188,350.9219 L1632.7188,353.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="1650.25" y="352.8467">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="1490" x2="1822" y1="364" y2="364"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497" y="374.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1509" y="380.9951">mStatus : Status</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497" y="390.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="1509" y="397.292">mMutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497" y="407.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="1509" y="413.5889">mConditionVariable : std::condition_variable</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497" y="423.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="1509" y="429.8857">mThreadPtr : std::unique_ptr&lt;std::thread&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497" y="439.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="1509" y="446.1826">mAgents : std::vector&lt;Agent::WeakPtr&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1490" x2="1822" y1="453.4844" y2="453.4844"/><ellipse cx="1500" cy="467.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1509" y="470.4795">Server()</text><ellipse cx="1500" cy="483.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1509" y="486.7764">~Server()</text><ellipse cx="1500" cy="499.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="1509" y="503.0732">getStatus() : int {query}</text><ellipse cx="1500" cy="516.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="1509" y="519.3701">registerAgent(Agent::SharedPtr agent) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497" y="529.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="1509" y="535.667">run() : void</text><ellipse cx="1500" cy="548.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1509" y="551.9639">start() : void</text><ellipse cx="1500" cy="564.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1509" y="568.2607">stop() : void</text></g><!--MD5=[85b7aeefaadb719f4e60472b44e3a0b8]
class Callback::Type--><g id="elem_Callback::Type"><rect codeLine="54" fill="#F1F1F1" height="80.5938" id="Callback::Type" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="463.75" y="676.5"/><ellipse cx="478.75" cy="692.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M482.8594,698.5 L475.1406,698.5 L475.1406,686.1094 L482.8594,686.1094 L482.8594,688.2656 L477.5938,688.2656 L477.5938,690.9375 L482.3594,690.9375 L482.3594,693.0938 L477.5938,693.0938 L477.5938,696.3438 L482.8594,696.3438 L482.8594,698.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="492.75" y="697.3467">Callback::Type</text><line style="stroke:#181818;stroke-width:0.5;" x1="464.75" x2="595.75" y1="708.5" y2="708.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="469.75" y="725.4951">NOTIFICATION</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="469.75" y="741.792">RESULT</text><line style="stroke:#181818;stroke-width:0.5;" x1="464.75" x2="595.75" y1="749.0938" y2="749.0938"/></g><!--MD5=[56d3b85566b7013b7a0d77cf3a9da218]
class Receipt::Mode--><g id="elem_Receipt::Mode"><rect codeLine="60" fill="#F1F1F1" height="80.5938" id="Receipt::Mode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="516" y="1154.5"/><ellipse cx="531" cy="1170.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M535.1094,1176.5 L527.3906,1176.5 L527.3906,1164.1094 L535.1094,1164.1094 L535.1094,1166.2656 L529.8438,1166.2656 L529.8438,1168.9375 L534.6094,1168.9375 L534.6094,1171.0938 L529.8438,1171.0938 L529.8438,1174.3438 L535.1094,1174.3438 L535.1094,1176.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="545" y="1175.3467">Receipt::Mode</text><line style="stroke:#181818;stroke-width:0.5;" x1="517" x2="649" y1="1186.5" y2="1186.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="522" y="1203.4951">Async</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="522" y="1219.792">Blocking</text><line style="stroke:#181818;stroke-width:0.5;" x1="517" x2="649" y1="1227.0938" y2="1227.0938"/></g><!--MD5=[c34f78efd55114cb950f71aaddf20012]
class Receipt::Status--><g id="elem_Receipt::Status"><rect codeLine="66" fill="#F1F1F1" height="80.5938" id="Receipt::Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="685.75" y="1154.5"/><ellipse cx="700.75" cy="1170.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M704.8594,1176.5 L697.1406,1176.5 L697.1406,1164.1094 L704.8594,1164.1094 L704.8594,1166.2656 L699.5938,1166.2656 L699.5938,1168.9375 L704.3594,1168.9375 L704.3594,1171.0938 L699.5938,1171.0938 L699.5938,1174.3438 L704.8594,1174.3438 L704.8594,1176.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="714.75" y="1175.3467">Receipt::Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="686.75" x2="823.75" y1="1186.5" y2="1186.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="691.75" y="1203.4951">FAIL</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="691.75" y="1219.792">OK</text><line style="stroke:#181818;stroke-width:0.5;" x1="686.75" x2="823.75" y1="1227.0938" y2="1227.0938"/></g><!--MD5=[d9a7c2c8011ee60fa59415266aa6c258]
class Server::Status--><g id="elem_Server::Status"><rect codeLine="72" fill="#F1F1F1" height="113.1875" id="Server::Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="1591" y="660.5"/><ellipse cx="1606" cy="676.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1610.1094,682.5 L1602.3906,682.5 L1602.3906,670.1094 L1610.1094,670.1094 L1610.1094,672.2656 L1604.8438,672.2656 L1604.8438,674.9375 L1609.6094,674.9375 L1609.6094,677.0938 L1604.8438,677.0938 L1604.8438,680.3438 L1610.1094,680.3438 L1610.1094,682.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1620" y="681.3467">Server::Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="1592" x2="1720" y1="692.5" y2="692.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="1597" y="709.4951">Init</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="1597" y="725.792">Run</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1597" y="742.0889">Start</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1597" y="758.3857">Stop</text><line style="stroke:#181818;stroke-width:0.5;" x1="1592" x2="1720" y1="765.6875" y2="765.6875"/></g><!--MD5=[caac18772e54bee9b64ca90683596fb8]
class Callback::Message_t--><g id="elem_Callback::Message_t"><rect codeLine="80" fill="#F1F1F1" height="80.5938" id="Callback::Message_t" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="177.75" y="676.5"/><ellipse cx="228" cy="692.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M230.9688,698.1406 Q230.3906,698.4375 229.75,698.5781 Q229.1094,698.7344 228.4063,698.7344 Q225.9063,698.7344 224.5781,697.0938 Q223.2656,695.4375 223.2656,692.3125 Q223.2656,689.1875 224.5781,687.5313 Q225.9063,685.875 228.4063,685.875 Q229.1094,685.875 229.75,686.0313 Q230.4063,686.1875 230.9688,686.4844 L230.9688,689.2031 Q230.3438,688.625 229.75,688.3594 Q229.1563,688.0781 228.5313,688.0781 Q227.1875,688.0781 226.5,689.1563 Q225.8125,690.2188 225.8125,692.3125 Q225.8125,694.4063 226.5,695.4844 Q227.1875,696.5469 228.5313,696.5469 Q229.1563,696.5469 229.75,696.2813 Q230.3438,696 230.9688,695.4219 L230.9688,698.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="248.5" y="697.3467">Callback::Message_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="178.75" x2="427.75" y1="708.5" y2="708.5"/><ellipse cx="188.75" cy="722.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="197.75" y="725.4951">mTime : Receipt::ChronotTime_t</text><ellipse cx="188.75" cy="738.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="197.75" y="741.792">mResult : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="178.75" x2="427.75" y1="749.0938" y2="749.0938"/></g><!--MD5=[644b5eb9c16c6c1d603327159cdb92d3]
class scoped_logger--><g id="elem_scoped_logger"><rect codeLine="86" fill="#F1F1F1" height="113.1875" id="scoped_logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="607" x="1489.75" y="110.5"/><ellipse cx="1737.5" cy="126.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1740.4688,132.1406 Q1739.8906,132.4375 1739.25,132.5781 Q1738.6094,132.7344 1737.9063,132.7344 Q1735.4063,132.7344 1734.0781,131.0938 Q1732.7656,129.4375 1732.7656,126.3125 Q1732.7656,123.1875 1734.0781,121.5313 Q1735.4063,119.875 1737.9063,119.875 Q1738.6094,119.875 1739.25,120.0313 Q1739.9063,120.1875 1740.4688,120.4844 L1740.4688,123.2031 Q1739.8438,122.625 1739.25,122.3594 Q1738.6563,122.0781 1738.0313,122.0781 Q1736.6875,122.0781 1736,123.1563 Q1735.3125,124.2188 1735.3125,126.3125 Q1735.3125,128.4063 1736,129.4844 Q1736.6875,130.5469 1738.0313,130.5469 Q1738.6563,130.5469 1739.25,130.2813 Q1739.8438,130 1740.4688,129.4219 L1740.4688,132.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1758" y="131.3467">scoped_logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="1490.75" x2="2095.75" y1="142.5" y2="142.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1497.75" y="153.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1509.75" y="159.4951">_ss : std::stringstream</text><line style="stroke:#181818;stroke-width:0.5;" x1="1490.75" x2="2095.75" y1="166.7969" y2="166.7969"/><ellipse cx="1500.75" cy="180.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="1509.75" y="183.792">scoped_logger(const std::string&amp; className, const char* funcName, unsigned line)</text><ellipse cx="1500.75" cy="196.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1509.75" y="200.0889">~scoped_logger()</text><ellipse cx="1500.75" cy="213.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1509.75" y="216.3857">stream() : std::stringstream&amp;</text></g><!--MD5=[ab38a78e8acf248efd1cc74ac7d17596]
reverse link Cmder.IControllableThread to Cmder.Agent--><g id="link_Cmder.IControllableThread_Cmder.Agent"><path codeLine="158" d="M781.679,231.22 C801.095,254.083 823.903,280.943 846.815,307.927 " fill="none" id="Cmder.IControllableThread-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="776.115,235.48,768.505,215.7,786.786,226.42,776.115,235.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fbdf90a246226e85fc52c953f7eefd33]
reverse link Cmder.Agent to Callback--><g id="link_Cmder.Agent_Callback"><path codeLine="166" d="M672.744,454 C648.178,454 623.612,454 599.046,454 " fill="none" id="Cmder.Agent-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="685.989,454,679.989,450,673.989,454,679.989,458,685.989,454" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bf02576d47bb938cb2d40c3669a2806b]
reverse link Cmder.Agent to Server--><g id="link_Cmder.Agent_Server"><path codeLine="169" d="M1267.34,454 C1341.16,454 1414.97,454 1488.78,454 " fill="none" id="Cmder.Agent-backto-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1254.05,454,1260.05,458,1266.05,454,1260.05,450,1254.05,454" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[98625154dfbdf243b4c4df43b2afb5e4]
reverse link Server to Cmder.Agent--><g id="link_Server_Cmder.Agent"><path codeLine="190" d="M1475.49,454 C1401.67,454 1327.86,454 1254.05,454 " fill="none" id="Server-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1488.78,454,1482.78,450,1476.78,454,1482.78,458,1488.78,454" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[208de34f581ccb6e0c9473f02a0d7dd0]
reverse link Cmder.Agent to Cmder.Status--><g id="link_Cmder.Agent_Cmder.Status"><path codeLine="172" d="M1009.35,613.001 C1013.55,629.862 1017.59,646.081 1021.17,660.463 " fill="none" id="Cmder.Agent-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1006.112,600.002,1003.6801,606.7907,1009.0113,611.6465,1011.4431,604.8578,1006.112,600.002" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[acbca8f51b8f134ee641c3769debd151]
reverse link Cmder.Testing.AgentTest to Cmder.Agent--><g id="link_Cmder.Testing.AgentTest_Cmder.Agent"><path codeLine="175" d="M1005.013,261.102 C1002.274,276.112 999.383,291.956 996.485,307.844 " fill="none" id="Cmder.Testing.AgentTest-backto-Cmder.Agent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1007.38,248.147,1002.3683,253.3319,1005.2268,259.9522,1010.2385,254.7674,1007.38,248.147" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="996.6293" y="268.1115">2</text></g><!--MD5=[b7ed66f30699f3d749314a60335d18bb]
reverse link Cmder.Testing.AgentTest to Callback--><g id="link_Cmder.Testing.AgentTest_Callback"><path codeLine="178" d="M895.408,254.459 C882.447,261.114 869.189,267.126 856,272 C754.415,309.54 718.726,276.859 615,308 C572.809,320.667 529.034,338.069 488.088,356.428 " fill="none" id="Cmder.Testing.AgentTest-backto-Callback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="907.218,248.18,900.0424,247.4648,896.6225,253.8134,903.798,254.5285,907.218,248.18" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b4aa6707c61cd086978c556deff35285]
reverse link Cmder.Testing.AgentTest to Server--><g id="link_Cmder.Testing.AgentTest_Server"><path codeLine="181" d="M1157.6,254.018 C1171.9,260.88 1186.52,267.056 1201,272 C1316.4,311.395 1360.72,260.421 1473,308 C1488.4,314.524 1503.58,322.71 1518.22,331.854 " fill="none" id="Cmder.Testing.AgentTest-backto-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1145.66,248.105,1149.2605,254.3529,1156.4126,253.4325,1152.8121,247.1846,1145.66,248.105" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8672172a630260964f6faa239709a3cf]
reverse link Callback::Message_t to Receipt--><g id="link_Callback::Message_t_Receipt"><path codeLine="184" d="M373.28,765.046 C403.027,784.958 439.282,809.227 476.073,833.855 " fill="none" id="Callback::Message_t-backto-Receipt" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="362.211,757.636,364.9719,764.2976,372.183,764.3113,369.4221,757.6496,362.211,757.636" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[487fb8a49337b43a59761822cfb8472c]
reverse link Receipt to Cmder.Status--><g id="link_Receipt_Cmder.Status"><path codeLine="187" d="M879.691,868.346 C914.77,847.811 949.341,824.255 979,798 C986.997,790.92 994.45,782.48 1001.142,773.778 " fill="none" id="Receipt-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="868.289,874.907,875.4845,875.3811,878.6896,868.9214,871.4941,868.4473,868.289,874.907" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[61e35a4ce32bc6e6a48adb6bef158684]
reverse link Server to Cmder.Status--><g id="link_Server_Cmder.Status"><path codeLine="193" d="M1503.21,583.095 C1493.24,589.22 1483.14,594.921 1473,600 C1335.15,669.066 1151.64,700.372 1073.19,711.252 " fill="none" id="Server-backto-Cmder.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1514.39,576.009,1507.1809,575.8411,1504.2531,582.4311,1511.4623,582.599,1514.39,576.009" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a1e2f2ff8a03ef2bf726d51c1390d56e]
reverse link Cmder.Testing.ServerTest to Server--><g id="link_Cmder.Testing.ServerTest_Server"><path codeLine="196" d="M1400.28,232.15 C1434.37,261.595 1475.97,297.517 1515.62,331.762 " fill="none" id="Cmder.Testing.ServerTest-backto-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1390.41,223.63,1392.3425,230.5773,1399.4987,231.4655,1397.5662,224.5182,1390.41,223.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[37feff7b10c342727b1eb71a39190441]
reverse link Cmder.Agent to Cmder.Agent::Task--><g id="link_Cmder.Agent_Cmder.Agent::Task"><path codeLine="205" d="M929.637,614.616 C924.733,634.011 920.057,652.502 916.074,668.254 " fill="none" id="Cmder.Agent-backto-Cmder.Agent::Task" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="931.3717" cy="607.7579" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="929.4105" x2="933.333" y1="615.5137" y2="600.002"/><line style="stroke:#181818;stroke-width:1.0;" x1="923.6159" x2="939.1276" y1="605.7966" y2="609.7191"/></g><!--MD5=[59543f07a28b41313b01d526ae5b31f0]
reverse link Callback to Callback::Message_t--><g id="link_Callback_Callback::Message_t"><path codeLine="208" d="M303,566.889 C303,605.841 303,647.052 303,676.254 " fill="none" id="Callback-backto-Callback::Message_t" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="303" cy="559.816" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="303" x2="303" y1="567.816" y2="551.816"/><line style="stroke:#181818;stroke-width:1.0;" x1="295" x2="311" y1="559.816" y2="559.816"/></g><!--MD5=[b786da24d691ca71eb7a2d6158d415f7]
reverse link Callback to Callback::Type--><g id="link_Callback_Callback::Type"><path codeLine="211" d="M397.179,563.285 C431.966,603.283 469.249,646.149 495.431,676.254 " fill="none" id="Callback-backto-Callback::Type" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="392.4536" cy="557.8527" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="397.7032" x2="387.204" y1="563.8894" y2="551.816"/><line style="stroke:#181818;stroke-width:1.0;" x1="386.4169" x2="398.4903" y1="563.1023" y2="552.6031"/></g><!--MD5=[337e37ce856fbf4a62df92e975117e08]
reverse link Receipt to Receipt::Mode--><g id="link_Receipt_Receipt::Mode"><path codeLine="214" d="M615.122,1108.465 C608.833,1125.212 602.876,1141.0747 597.839,1154.4869 " fill="none" id="Receipt-backto-Receipt::Mode" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="617.6582" cy="1101.7122" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="614.8453" x2="620.471" y1="1109.2014" y2="1094.223"/><line style="stroke:#181818;stroke-width:1.0;" x1="610.169" x2="625.1474" y1="1098.8994" y2="1104.525"/></g><!--MD5=[ff8f68cd9860b13c4e769e1081d0a27c]
reverse link Receipt to Receipt::Status--><g id="link_Receipt_Receipt::Status"><path codeLine="217" d="M722.878,1108.465 C729.167,1125.212 735.124,1141.0747 740.161,1154.4869 " fill="none" id="Receipt-backto-Receipt::Status" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="720.3418" cy="1101.7122" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="723.1547" x2="717.529" y1="1109.2014" y2="1094.223"/><line style="stroke:#181818;stroke-width:1.0;" x1="712.8526" x2="727.831" y1="1104.525" y2="1098.8994"/></g><!--MD5=[9ace9c1ccb22c4f34614b3bc72ca349a]
reverse link Server to Server::Status--><g id="link_Server_Server::Status"><path codeLine="220" d="M1656,591.525 C1656,615.919 1656,640.032 1656,660.444 " fill="none" id="Server-backto-Server::Status" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1656" cy="584.331" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1656" x2="1656" y1="592.331" y2="576.331"/><line style="stroke:#181818;stroke-width:1.0;" x1="1648" x2="1664" y1="584.331" y2="584.331"/></g><!--MD5=[fac7bc87ebc40da829d70c6e9a631d34]
@startuml





/' Objects '/

class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<Key_t, Message_t>
    -mMutex : std::mutex
    +getFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +waitFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +clear() : void
    +notify(TaskId taskId, Type type, const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    +getEndTime() : ChronotTime_t& {query}
    +getStartTime() : ChronotTime_t& {query}
    -mMode : Mode
    -mStatus : Status
    +getTaskId() : TaskId {query}
    +getExecutionMode() : int {query}
    +getStatus() : int {query}
    -mEndTime : time_point<std::chrono::system_clock>
    -mStartTime : time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
    +setStatus(Status status) : void
}


class Server {
    +Server()
    +~Server()
    -mStatus : Status
    +getStatus() : int {query}
    -mMutex : mutable std::mutex
    -mConditionVariable : std::condition_variable
    -mThreadPtr : std::unique_ptr<std::thread>
    -mAgents : std::vector<Agent::WeakPtr>
    +registerAgent(Agent::SharedPtr agent) : void
    -run() : void
    +start() : void
    +stop() : void
}


enum Callback::Type {
    NOTIFICATION
    RESULT
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Receipt::Status {
    FAIL
    OK
}


enum Server::Status {
    Init
    Run
    Start
    Stop
}


class Callback::Message_t {
    +mTime : Receipt::ChronotTime_t
    +mResult : std::string
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}


namespace Cmder {
    class Agent {
        -Agent(const Server& server, Callback::SharedPtr callback)
        +~Agent()
        -mCallback : Callback::SharedPtr
        +doTask(Receipt::Mode mode, Task task, std::string& result) : Receipt {query}
        +{static} create(Server& server, Callback::SharedPtr callback) : SharedPtr
        +getStatus() : Status {query}
        -mStatus : Status
        -mServer : const Server&
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mThreadPtr : std::unique_ptr<std::thread>
        +notify(const std::string& message) : void
        -run() : void
        +start() : void
        +stop() : void
    }

    abstract class IControllableThread {
        +{abstract} getStatus() : int {query}
        +{abstract} start() : void
        +{abstract} stop() : void
    }

    enum Agent::Task {
        BlockMe_3s
        Pi
        PingMe_5x
    }

    enum Status {
        Init
        Run
        Start
        Stop
    }

    namespace Testing {
        class AgentTest {
            #{static} sAsyncAgent : static Agent::SharedPtr
            #{static} sNoCallbackAgent : static Agent::SharedPtr
            #{static} sCallback : static Callback::SharedPtr
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }

        class ServerTest {
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }
    }
}





/' Inheritance relationships '/

Cmder.IControllableThread <|- - Cmder.Agent





/' Aggregation relationships '/

Cmder.Agent *- - .Callback


Cmder.Agent *- - .Server


Cmder.Agent *- - Cmder.Status


Cmder.Testing.AgentTest "2" *- - Cmder.Agent


Cmder.Testing.AgentTest *- - .Callback


Cmder.Testing.AgentTest *- - .Server


.Callback::Message_t *- - .Receipt


.Receipt *- - Cmder.Status


.Server *- - Cmder.Agent


.Server *- - Cmder.Status


Cmder.Testing.ServerTest *- - .Server






/' Nested objects '/

Cmder.Agent +- - Cmder.Agent::Task


.Callback +- - .Callback::Message_t


.Callback +- - .Callback::Type


.Receipt +- - .Receipt::Mode


.Receipt +- - .Receipt::Status


.Server +- - .Server::Status




@enduml

@startuml






class Callback {
    +Callback()
    +~Callback()
    +operator<<(std::ostream& ostr, const Callback::SharedPtr& cb) : std :: ostream&
    -mMessages : std::map<Key_t, Message_t>
    -mMutex : std::mutex
    +getFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +waitFirst(const Receipt& receipt, Type type) : std::optional<Message_t>
    +clear() : void
    +notify(TaskId taskId, Type type, const std::string& message) : void
}


class Receipt {
    +Receipt(Mode mode)
    +getEndTime() : ChronotTime_t& {query}
    +getStartTime() : ChronotTime_t& {query}
    -mMode : Mode
    -mStatus : Status
    +getTaskId() : TaskId {query}
    +getExecutionMode() : int {query}
    +getStatus() : int {query}
    -mEndTime : time_point<std::chrono::system_clock>
    -mStartTime : time_point<std::chrono::system_clock>
    -mTaskId : uint32_t
    +setEndTime() : void
    +setStatus(Status status) : void
}


class Server {
    +Server()
    +~Server()
    -mStatus : Status
    +getStatus() : int {query}
    -mMutex : mutable std::mutex
    -mConditionVariable : std::condition_variable
    -mThreadPtr : std::unique_ptr<std::thread>
    -mAgents : std::vector<Agent::WeakPtr>
    +registerAgent(Agent::SharedPtr agent) : void
    -run() : void
    +start() : void
    +stop() : void
}


enum Callback::Type {
    NOTIFICATION
    RESULT
}


enum Receipt::Mode {
    Async
    Blocking
}


enum Receipt::Status {
    FAIL
    OK
}


enum Server::Status {
    Init
    Run
    Start
    Stop
}


class Callback::Message_t {
    +mTime : Receipt::ChronotTime_t
    +mResult : std::string
}


class scoped_logger {
    +scoped_logger(const std::string& className, const char* funcName, unsigned line)
    +~scoped_logger()
    -_ss : std::stringstream
    +stream() : std::stringstream&
}


namespace Cmder {
    class Agent {
        -Agent(const Server& server, Callback::SharedPtr callback)
        +~Agent()
        -mCallback : Callback::SharedPtr
        +doTask(Receipt::Mode mode, Task task, std::string& result) : Receipt {query}
        +{static} create(Server& server, Callback::SharedPtr callback) : SharedPtr
        +getStatus() : Status {query}
        -mStatus : Status
        -mServer : const Server&
        -mMutex : mutable std::mutex
        -mConditionVariable : std::condition_variable
        -mThreadPtr : std::unique_ptr<std::thread>
        +notify(const std::string& message) : void
        -run() : void
        +start() : void
        +stop() : void
    }

    abstract class IControllableThread {
        +{abstract} getStatus() : int {query}
        +{abstract} start() : void
        +{abstract} stop() : void
    }

    enum Agent::Task {
        BlockMe_3s
        Pi
        PingMe_5x
    }

    enum Status {
        Init
        Run
        Start
        Stop
    }

    namespace Testing {
        class AgentTest {
            #{static} sAsyncAgent : static Agent::SharedPtr
            #{static} sNoCallbackAgent : static Agent::SharedPtr
            #{static} sCallback : static Callback::SharedPtr
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }

        class ServerTest {
            #{static} sServer : static Server
            #SetUp() : void
            #{static} SetUpTestSuite() : void
            #{static} TearDownTestSuite() : void
        }
    }
}






Cmder.IControllableThread <|- - Cmder.Agent






Cmder.Agent *- - .Callback


Cmder.Agent *- - .Server


Cmder.Agent *- - Cmder.Status


Cmder.Testing.AgentTest "2" *- - Cmder.Agent


Cmder.Testing.AgentTest *- - .Callback


Cmder.Testing.AgentTest *- - .Server


.Callback::Message_t *- - .Receipt


.Receipt *- - Cmder.Status


.Server *- - Cmder.Agent


.Server *- - Cmder.Status


Cmder.Testing.ServerTest *- - .Server







Cmder.Agent +- - Cmder.Agent::Task


.Callback +- - .Callback::Message_t


.Callback +- - .Callback::Type


.Receipt +- - .Receipt::Mode


.Receipt +- - .Receipt::Status


.Server +- - .Server::Status




@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(EPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>